{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/startOfDay/index.js","webpack:///./node_modules/date-fns/esm/isToday/index.js","webpack:///./node_modules/date-fns/esm/isSameDay/index.js","webpack:///./src/components/ButtonGroup.js","webpack:///./src/components/Filters/Filters.jsx","webpack:///./src/components/Filters/index.js","webpack:///./src/pages/schedule.js","webpack:///./node_modules/date-fns/esm/toDate/index.js"],"names":["startOfDay","dirtyDate","arguments","length","TypeError","date","Object","toDate","setHours","isToday","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","getTime","isSameDay","Date","now","StyledButtonGroup","styled_base_browser_esm","target","p","numberOfButtons","overflow","ButtonGroup","_ref","children","rest","objectWithoutPropertiesLoose_default","core_browser_esm","propTypes","css","PropTypes","string","number","isRequired","filters","label","type","StyledFilters","spacing","large","normal","mediaQueries","medium","filledFilter","css_browser_esm","typeColors","outlinedFilter","getStyle","isHover","isActive","isFilter","filterButtonStyle","Filters","activeFilter","onChangeActiveFilter","map","filter","Button","key","onClick","appearance","func","isActiveStyle","colors","blueDarkest","StyledLinkContainer","StyledLink","small","blue","expandMoreStyle","xsmall","getActiveDay","viewmodel","days","find","day","eventData","year","monthNumber","SchedulePage","location","StyledSafeLink","withComponent","SafeLink","_useState","useState","setActiveFilter","activeDay","schedules","scheduleDay","hash","substring","useEffect","currenSlots","slot","layouts","Content","ContentSection","minHeight","backgroundColor","blueDark","color","components_ButtonGroup","xlarge","to","ExpandMore_default","a","fontSize","withTopSeperator","withBottomSeperator","components_Filters","newFilter","Slots","slots","argument","argStr","prototype","toString","call","console","warn","Error","stack","NaN","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"component---src-pages-schedule-js-105ac4d5f2e2ddb7e600.js","sourcesContent":["import toDate from '../toDate/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import isSameDay from '../isSameDay/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameDay(dirtyDate, Date.now());\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst StyledButtonGroup = styled.div`\n  display: grid;\n  grid-template-columns: ${p =>\n    `repeat(${p.numberOfButtons}, auto [col-start])`};\n  grid-column-gap: 10px;\n  ${p => (p.overflow ? `overflow: ${p.overflow}` : '')};\n`;\n\nconst ButtonGroup = ({ children, ...rest }) => {\n  return <StyledButtonGroup {...rest}>{children}</StyledButtonGroup>;\n};\n\nButtonGroup.propTypes = {\n  css: PropTypes.string,\n  numberOfButtons: PropTypes.number.isRequired,\n};\n\nexport default ButtonGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { typeColors } from '../Slot/SlotStyles';\nimport Button from '../Button';\nimport css from '@emotion/css';\nimport spacing from '../../util/spacing';\nimport mediaQueries from '../../util/mediaQueries';\nconst filters = [\n  { label: 'Felles', type: 'other' },\n  { label: 'Keynote', type: 'keynote' },\n  { label: 'Talk', type: 'talk' },\n];\n\nconst StyledFilters = styled.div`\n  display: grid;\n  width: 40%;\n  grid-template-rows: ${spacing.large};\n  grid-template-columns: 30% 30% 30%;\n  margin: 0 auto;\n  grid-column-gap: ${spacing.normal};\n  @media (${mediaQueries.medium}) {\n    width: 100%;\n    margin-top: ${spacing.large};\n  }\n`;\n\nconst filledFilter = type => css`\n  dipfont-weight: 700;\n  border-radius: 5px;\n  color: white;\n  background-color: ${typeColors[type]};\n`;\n\nconst outlinedFilter = type => css`\n  font-weight: 700;\n  border-radius: 5px;\n  color: black;\n  background-color: inherit;\n  border: 2px solid ${typeColors[type]};\n`;\n\nconst getStyle = (isHover, isActive, isFilter, type) => {\n  if (!isFilter) {\n    return isHover ? outlinedFilter(type) : filledFilter(type);\n  }\n  if (isHover) {\n    return isActive ? outlinedFilter(type) : filledFilter(type);\n  }\n  return isActive ? filledFilter(type) : outlinedFilter(type);\n};\n\nconst filterButtonStyle = (type = 'other', isActive = false, isFilter) => css`\n  &,\n  &:focus {\n    ${getStyle(false, isActive, isFilter, type)};\n  }\n\n  &:hover {\n    ${getStyle(true, isActive, isFilter, type)};\n  }\n`;\n\nconst Filters = ({ activeFilter, onChangeActiveFilter }) => {\n  const isFilter = activeFilter !== '';\n  return (\n    <StyledFilters>\n      {filters.map(filter => (\n        <Button\n          key={filter.type}\n          onClick={() => onChangeActiveFilter(filter.type)}\n          appearance=\"stripped\"\n          css={filterButtonStyle(\n            filter.type,\n            filter.type === activeFilter,\n            isFilter,\n          )}>\n          {filter.label}\n        </Button>\n      ))}\n    </StyledFilters>\n  );\n};\n\nFilters.propTypes = {\n  activeFilter: PropTypes.string,\n  onChangeActiveFilter: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import Filters from './Filters';\n\nexport default Filters;\n","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { isToday } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport ButtonGroup from '../components/ButtonGroup';\nimport Content from '../components/Content';\nimport ContentSection from '../components/ContentSection';\nimport Filters from '../components/Filters';\nimport SafeLink from '../components/SafeLink';\nimport Slots from '../components/Slot/Slots';\nimport viewmodel, { eventData } from '../json';\nimport DefaultLayout from '../layouts';\nimport colors from '../util/colors';\nimport mediaQueries from '../util/mediaQueries';\nimport spacing from '../util/spacing';\n\nconst buttonGroupStyle = numberOfButtons => css`\n  margin: ${spacing.large} auto;\n  margin-bottom: 0;\n  grid-template-columns: 100%;\n  grid-template-rows: ${spacing.xlarge};\n  grid-template-columns: 25% 25% 25% 25%;\n  width: 80%;\n  grid-template-rows: auto;\n\n  @media (${mediaQueries.medium}) {\n    grid-row-gap: 10px;\n    width: 100%;\n    grid-template-rows: auto auto;\n    grid-template-columns: 50% 50%;\n    margin-bottom: ${spacing.normal};\n  }\n`;\n\nconst isActiveStyle = css`\n  color: white;\n  background-color: ${colors.blueDarkest};\n  border-color: ${colors.blueDarkest};\n`;\n\nconst StyledLinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (${mediaQueries.medium}) {\n    display: grid;\n    grid-template-columns: 90% 10%;\n    grid-template-rows: auto;\n    grid-template-areas: 'button arrow';\n  }\n`;\n\nconst StyledLink = styled.a`\n  padding: ${spacing.small} ${spacing.normal};\n  background-color: ${colors.blue};\n  text-decoration: none;\n  color: white;\n  border: 1px solid ${colors.blue};\n  border-radius: 50px;\n  text-align: center;\n  display: ${p => p.isActive && isActiveStyle};\n  &:hover,\n  &:focus {\n    ${isActiveStyle};\n  }\n  @media (${mediaQueries.medium}) {\n    grid-area: button;\n  }\n`;\n\nconst expandMoreStyle = css`\n  margin-top: ${spacing.xsmall};\n  color: ${colors.blue};\n  visibility: visible;\n  align-self: center;\n  @media (${mediaQueries.medium}) {\n    grid-area: arrow;\n    visibility: hidden;\n  }\n`;\n\nexport const getActiveDay = () => {\n  const todayDate = viewmodel.days.find(day =>\n    isToday(new Date(eventData.year, eventData.monthNumber - 1, day.date)),\n  );\n  return todayDate || viewmodel.days[0];\n};\n\nconst SchedulePage = ({ location }) => {\n  const StyledSafeLink = StyledLink.withComponent(SafeLink);\n  const [activeFilter, setActiveFilter] = useState('');\n  const dayInUrl = viewmodel.schedules.find(\n    scheduleDay => scheduleDay.date === location.hash.substring(1),\n  );\n  const activeDay = dayInUrl || getActiveDay();\n  if (!activeDay || !activeDay.date) {\n    return <span>Her skjedde noe feil gitt...</span>;\n  }\n\n  const onChangeActiveFilter = newFilter => {\n    const updatedActiveFilter = newFilter === activeFilter ? '' : newFilter;\n    setActiveFilter(updatedActiveFilter);\n  };\n\n  useEffect(\n    () => {\n      setActiveFilter('');\n    },\n    [location],\n  );\n\n  const currenSlots = viewmodel.schedules\n    .filter(slot => slot.date === activeDay.date)\n    .filter(slot => {\n      if (activeFilter === '') {\n        return true;\n      }\n      if (!slot.type) {\n        return activeFilter === 'other';\n      }\n      return slot.type === activeFilter;\n    });\n\n  return (\n    <DefaultLayout>\n      <Content>\n        <ContentSection\n          minHeight=\"5vh\"\n          backgroundColor={colors.blueDark}\n          color=\"white\">\n          <ButtonGroup\n            css={buttonGroupStyle(viewmodel.days.length)}\n            numberOfButtons={viewmodel.days.length}>\n            {viewmodel.days.map(day => (\n              <StyledLinkContainer key={day.label}>\n                <StyledSafeLink\n                  isActive={activeDay.date === day.date}\n                  to={`/schedule#${day.date}`}>\n                  {day.label}\n                </StyledSafeLink>\n                {activeDay.date === day.date && (\n                  <ExpandMore css={expandMoreStyle} fontSize=\"large\" />\n                )}\n              </StyledLinkContainer>\n            ))}\n          </ButtonGroup>\n        </ContentSection>\n        <ContentSection minHeight=\"95vh\" withTopSeperator withBottomSeperator>\n          <Filters\n            activeFilter={activeFilter}\n            onChangeActiveFilter={onChangeActiveFilter}\n          />\n          <Slots activeFilter={activeFilter} slots={currenSlots} />\n        </ContentSection>\n      </Content>\n    </DefaultLayout>\n  );\n};\n\nexport default SchedulePage;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}"],"sourceRoot":""}