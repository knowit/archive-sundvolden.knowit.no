{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/favorites.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["loader","enqueue","React","createContext","StyledEmptyFavorites","Object","styled_base_browser_esm","target","name","styles","StyledFavoriteIcon","FavoriteIcon","colors","heartRed","FavoritesPage","_useState","useState","favorites","setFavorites","useEffect","favoriteCookies","getCookie","document","cookie","JSON","parse","allCollections","fetchSlots","filter","_ref","uniqueSlotIdentifier","date","start","time","title","find","favorite","core_browser_esm","layouts","Content","ContentSection","minHeight","withTopSeperator","withBottomSeperator","length","Slots","slots","removeFavorite","isFavourites","fontSize","gatsby_link_default","a","to","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json"],"mappings":"4PAcyBA,QAAOC,QAELC,IAAMC,cAAc,ICJ/C,IAAMC,EAAoBC,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,uBAGpBC,EAAqBL,OAAAC,EAAA,EAAAD,CAAOM,IAAP,CAAAJ,OAAA,YAAAF,CAAH,SACbO,IAAOC,SADM,kCA6CTC,UAxCO,WAAM,IAAAC,EACQC,mBAAS,IAApCC,EADmBF,EAAA,GACRG,EADQH,EAAA,GAK1BI,oBAAU,WACR,IAAMC,EAAkBC,YAAU,YAAaC,SAASC,QACxDL,EAAaE,EAAkBI,KAAKC,MAAML,GAAmB,KAC5D,IAEH,IACMM,EADQC,cACeC,OAAO,SAAAC,GAAA,IATnBC,EASsBC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,MAAOC,EAAhBJ,EAAgBI,KAAMC,EAAtBL,EAAsBK,MAAtB,OATnBJ,EAUHC,EAAJ,KAAYC,GAASC,GAArB,IAA6BC,IATnCjB,EAAUkB,KAAK,SAAAC,GAAQ,OAAIA,IAAaN,MAW5C,OACEzB,OAAAgC,EAAA,EAAAhC,CAACiC,EAAA,EAAD,KACEjC,OAAAgC,EAAA,EAAAhC,CAACkC,EAAA,EAAD,KACElC,OAAAgC,EAAA,EAAAhC,CAACmC,EAAA,EAAD,CAAgBC,UAAU,QAAQC,kBAAgB,EAACC,qBAAmB,GACnEjB,GAAkBA,EAAekB,OAAS,EACzCvC,OAAAgC,EAAA,EAAAhC,CAACwC,EAAA,EAAD,CACEC,MAAOpB,EACPqB,eAAgB7B,EAChB8B,cAAY,IAGd3C,OAAAgC,EAAA,EAAAhC,CAACD,EAAD,KACEC,OAAAgC,EAAA,EAAAhC,CAACK,EAAD,CAAoBuC,SAAS,UAC7B5C,OAAAgC,EAAA,EAAAhC,CAAA,yDAC+CA,OAAAgC,EAAA,EAAAhC,CAAA,WAD/C,UAESA,OAAAgC,EAAA,EAAAhC,CAAC6C,EAAAC,EAAD,CAAMC,GAAG,aAAT,cAFT,mFC/Cd,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8ECsBhCK,UAjBU,SAAA7B,GAAiC,IAA9B8B,EAA8B9B,EAA9B8B,SAAUC,EAAoB/B,EAApB+B,cACpC,OAAKA,EAGE1D,IAAM2D,cAAcC,IAApBzD,OAAA0D,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-pages-favorites-js-0a2df207b37a5b204fb6.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React, { useState, useEffect } from 'react';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport styled from '@emotion/styled';\nimport Content from '../components/Content';\nimport DefaultLayout from '../layouts';\nimport ContentSection from '../components/ContentSection';\nimport { getCookie } from '../util/cookieHelper';\nimport Slots from '../components/Slot/Slots';\nimport { fetchSlots } from '../graphql/airtable';\nimport colors from '../util/colors';\nimport { Link } from 'gatsby';\n\nconst StyledEmptyFavorites = styled.div`\n  text-align: center;\n`;\nconst StyledFavoriteIcon = styled(FavoriteIcon)`\n  color: ${colors.heartRed};\n  display: block;\n  font-size: 2rem;\n`;\nconst FavoritesPage = () => {\n  const [favorites, setFavorites] = useState([]);\n  const isActive = uniqueSlotIdentifier =>\n    !!favorites.find(favorite => favorite === uniqueSlotIdentifier);\n\n  useEffect(() => {\n    const favoriteCookies = getCookie('favorites', document.cookie);\n    setFavorites(favoriteCookies ? JSON.parse(favoriteCookies) : []);\n  }, []);\n\n  const slots = fetchSlots();\n  const allCollections = slots.filter(({ date, start, time, title }) =>\n    isActive(`${date}_${start || time}_${title}`),\n  );\n  return (\n    <DefaultLayout>\n      <Content>\n        <ContentSection minHeight=\"100vh\" withTopSeperator withBottomSeperator>\n          {allCollections && allCollections.length > 0 ? (\n            <Slots\n              slots={allCollections}\n              removeFavorite={setFavorites}\n              isFavourites\n            />\n          ) : (\n            <StyledEmptyFavorites>\n              <StyledFavoriteIcon fontSize=\"large\" />\n              <p>\n                Du har foreløig ikke lagret noen favoritter. <br />\n                Gå til <Link to=\"/schedule\">programmet</Link> dersom du vil\n                finne innhold du vil huske til senere.\n              </p>\n            </StyledEmptyFavorites>\n          )}\n        </ContentSection>\n      </Content>\n    </DefaultLayout>\n  );\n};\n\nexport default FavoritesPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}