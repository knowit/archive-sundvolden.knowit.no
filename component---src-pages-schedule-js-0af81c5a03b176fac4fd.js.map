{"version":3,"sources":["webpack:///./src/components/Slot/SlotStyles.js","webpack:///./src/components/Slot/BreakSlot.js","webpack:///./src/components/Icons/Cross.js","webpack:///./src/components/Talks/TalkDescription.js","webpack:///./src/components/Talks/TalkSpeaker.js","webpack:///./src/components/Talks/Talk.js","webpack:///./src/components/Talks/Talks.js","webpack:///./src/components/Talks/index.js","webpack:///./src/components/Entries.jsx","webpack:///./src/components/Slot/EntriesSlot.js","webpack:///./src/components/Villages/Village.jsx","webpack:///./src/components/Villages/Villages.js","webpack:///./src/components/Slot/OtherSlot.js","webpack:///./src/components/Slot/Slot.js","webpack:///./src/components/Slot/index.js","webpack:///./src/pages/schedule.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/Icons/Person.js"],"names":["slotTitleStyles","grey","css","colors","greyLight","white","mediaQueries","medium","StyledSlot","Object","styled_base_browser_esm","target","StyledSlotTime","StyledSlotTitle","p","background","BreakSlot","_ref","collection","core_browser_esm","time","title","propTypes","PropTypes","object","Cross","rest","assign","extends_default","xmlns","viewBox","points","descriptionButtonStyle","knowit","green","StyledTalkDescription","name","styles","shortDescription","description","length","substring","TalkDescription","showDescription","toggleShowDescription","DESCRIPTION_LENGTH","dangerouslySetInnerHTML","__html","Button","appearance","onClick","Icons_Cross","bool","isRequired","func","string","defaultProps","StyledTalkSpeakerImage","primary","personIconStyle","talkSpeakerNameStyle","StyledTalkSpeakerImageContainer","TalkSpeaker","speaker","numberOfSpeakers","talkId","pic","src","withPrefix","Person","gatsby_link_default","a","to","number","StyledTalkPause","StyledTalk","StyledTalkInfo","StyledTalkSpeakers","Talk","_this","_React$Component","call","this","state","bind","assertThisInitialized_default","setState","prevState","render","props","talk","viewmodel","talks","speakers","Talks_TalkSpeaker","Talks_TalkDescription","React","Component","StyledTalksContainer","double","StyledTalksType","StyledTalksRoom","Talks","collectionTitle","entry","columnSize","room","slots","map","index","Talks_Talk","key","StyledEntries","Entries","entries","components_Talks","array","EntriesSlot","components_Entries","Village","villageId","village","villages","find","vill","id","path","Villages","Villages_Village","arrayOf","StyledSpan","OtherSlot","components_Villages_Villages","Slot","isBreak","Slot_BreakSlot","Slot_EntriesSlot","Slot_OtherSlot","buttonGroupStyle","pickDayButtonsStyle","buttonStyle","StyledSelect","StyledHeader","linkStyle","SchedulePage","onDayClick","onSelectChange","activeIndex","evt","preventDefault","value","_this2","activeDay","schedules","undefined","day","Content","backgroundColor","greyLightest","ButtonGroup","onChange","collections","components_Slot","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match","e","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","fill","height","width","d"],"mappings":"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","file":"component---src-pages-schedule-js-0af81c5a03b176fac4fd.js","sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../../util/colors';\nimport mediaQueries from '../../util/mediaQueries';\n\nconst slotTitleStyles = {\n  grey: css`\n    text-align: center;\n    color: black;\n    background-color: ${colors.greyLight};\n    border: 1px solid ${colors.greyLight};\n  `,\n  white: css`\n    border: 1px solid ${colors.greyLight};\n    background-color: white;\n    color: black;\n    @media (${mediaQueries.medium}) {\n      border-left: none;\n      border-right: none;\n    }\n  `,\n};\n\nconst StyledSlot = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  flex-flow: row;\n\n  @media (${mediaQueries.medium}) {\n    flex-flow: column;\n  }\n`;\n\nconst StyledSlotTime = styled.span`\n  align-self: center;\n  width: 10%;\n\n  @media (${mediaQueries.medium}) {\n    align-self: center;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst StyledSlotTitle = styled.div`\n  padding: 1rem 0;\n  width: 90%;\n  @media (${mediaQueries.medium}) {\n    padding: 1rem 0;\n    font-weight: bold;\n    width: 100%;\n  }\n  ${p => (p.background ? slotTitleStyles[p.background] : '')};\n`;\n\nexport { StyledSlot, StyledSlotTime, StyledSlotTitle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledSlot, StyledSlotTime, StyledSlotTitle } from './SlotStyles';\n\nconst BreakSlot = ({ collection }) => {\n  return (\n    <StyledSlot>\n      <StyledSlotTime>{collection.time}</StyledSlotTime>\n      <StyledSlotTitle background=\"grey\">\n        <span>{collection.title}</span>\n      </StyledSlotTitle>\n    </StyledSlot>\n  );\n};\n\nBreakSlot.propTypes = {\n  collection: PropTypes.object,\n};\n\nexport default BreakSlot;\n","import React from 'react';\n\nconst Cross = ({ ...rest }) => {\n  return (\n    <svg {...rest} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 125\">\n      <polygon points=\"80.9,32.3 77.2,28.5 50,55.7 22.8,28.5 19.1,32.3 46.3,59.5 19.1,86.6 22.8,90.4 50,63.2 77.2,90.4 80.9,86.6 53.7,59.5 \" />\n    </svg>\n  );\n};\n\nexport default Cross;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../../util/colors';\nimport Cross from '../Icons/Cross';\nimport Button from '../Button';\n\nconst descriptionButtonStyle = css`\n  margin: 1rem auto;\n  color: black;\n\n  &:focus,\n  &:hover {\n    color: ${colors.knowit.green};\n  }\n`;\n\nconst StyledTalkDescription = styled.span`\n  margin-top: 0.2rem;\n  display: block;\n`;\n\nconst DESCRIPTION_LENGTH = 100;\n\nconst shortDescription = description => {\n  if (description.length > DESCRIPTION_LENGTH) {\n    return `${description.substring(0, 100)}... Les mer`;\n  }\n  return description;\n};\n\nconst TalkDescription = ({\n  showDescription,\n  toggleShowDescription,\n  description,\n}) => {\n  if (description.length < DESCRIPTION_LENGTH + 1) {\n    return <StyledTalkDescription>{description}</StyledTalkDescription>;\n  }\n\n  if (showDescription) {\n    return (\n      <StyledTalkDescription>\n        <div dangerouslySetInnerHTML={{ __html: description }} />\n        <Button\n          appearance=\"stripped\"\n          onClick={toggleShowDescription}\n          css={descriptionButtonStyle}>\n          <Cross />\n        </Button>\n      </StyledTalkDescription>\n    );\n  }\n\n  return (\n    <StyledTalkDescription onClick={toggleShowDescription}>\n      <div\n        dangerouslySetInnerHTML={{ __html: shortDescription(description) }}\n      />\n    </StyledTalkDescription>\n  );\n};\n\nTalkDescription.propTypes = {\n  showDescription: PropTypes.bool.isRequired,\n  toggleShowDescription: PropTypes.func.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nTalkDescription.defaultProps = {\n  description: '',\n};\n\nexport default TalkDescription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link, { withPrefix } from 'gatsby-link';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../../util/colors';\nimport Person from '../Icons/Person';\n\nconst StyledTalkSpeakerImage = styled.img`\n  height: 100px;\n  border-bottom: 3px solid ${colors.primary};\n`;\n\nconst personIconStyle = css`\n  width: 60px;\n  height: 60px;\n`;\n\nconst talkSpeakerNameStyle = css`\n  font-size: 0.8rem;\n  display: block;\n  font-weight: bold;\n  color: black;\n\n  &:hover,\n  &:focus {\n    color: black;\n  }\n`;\n\nconst StyledTalkSpeakerImageContainer = styled.span`\n  display: inline-block;\n`;\n\nconst TalkSpeaker = ({ speaker, numberOfSpeakers, talkId }) => {\n  return (\n    <div>\n      <StyledTalkSpeakerImageContainer>\n        {speaker.pic ? (\n          <StyledTalkSpeakerImage\n            src={withPrefix(`/static/pics/${speaker.pic}`)}\n          />\n        ) : (\n          <Person css={personIconStyle} />\n        )}\n      </StyledTalkSpeakerImageContainer>\n      <Link css={talkSpeakerNameStyle} to={`/speakers#${talkId}`}>\n        {numberOfSpeakers > 1 ? `${speaker.name} med flere` : speaker.name}\n      </Link>\n    </div>\n  );\n};\n\nTalkSpeaker.propTypes = {\n  speaker: PropTypes.object.isRequired,\n  numberOfSpeakers: PropTypes.number.isRequired,\n  talkId: PropTypes.string.isRequired,\n};\n\nexport default TalkSpeaker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport colors from '../../util/colors';\nimport viewmodel from '../../json';\nimport TalkDescription from './TalkDescription';\nimport TalkSpeaker from './TalkSpeaker';\n\nconst StyledTalkPause = styled.div`\n  padding: 1rem 1rem;\n  text-align: center;\n  font-weight: bold;\n  width: 100%;\n  background-color: ${colors.greyLight};\n  margin: 1rem -1rem;\n`;\n\nconst StyledTalk = styled.div`\n  margin-top: 3rem;\n  display: flex;\n`;\n\nconst StyledTalkInfo = styled.div`\n  display: inline-block;\n  margin-left: 2rem;\n  width: 85%;\n`;\n\nconst StyledTalkSpeakers = styled.strong`\n  display: inline-block;\n  text-align: center;\n  width: 15%;\n`;\n\nclass Talk extends React.Component {\n  constructor() {\n    super();\n    this.state = { showDescription: false };\n    this.toggleShowDescription = this.toggleShowDescription.bind(this);\n  }\n\n  toggleShowDescription() {\n    this.setState(prevState => ({\n      showDescription: !prevState.showDescription,\n    }));\n  }\n\n  render() {\n    const { talkId } = this.props;\n    if (talkId === 'pause') {\n      return (\n        <StyledTalkPause>\n          <span>Pause</span>\n        </StyledTalkPause>\n      );\n    }\n    const talk = viewmodel.talks[talkId];\n    return (\n      <StyledTalk>\n        <StyledTalkSpeakers>\n          {talk.speakers && talk.speakers.length !== 0 ? (\n            <TalkSpeaker\n              speaker={talk.speakers[0]}\n              numberOfSpeakers={talk.speakers.length}\n              talkId={talkId}\n            />\n          ) : null}\n        </StyledTalkSpeakers>\n\n        <StyledTalkInfo>\n          <strong>{talk.title}</strong>\n          <TalkDescription\n            description={talk.description}\n            showDescription={this.state.showDescription}\n            toggleShowDescription={this.toggleShowDescription}\n          />\n        </StyledTalkInfo>\n      </StyledTalk>\n    );\n  }\n}\n\nTalk.propTypes = {\n  talkId: PropTypes.string.isRequired,\n};\n\nexport default Talk;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport Talk from './Talk';\nimport colors from '../../util/colors';\nimport mediaQueries from '../../util/mediaQueries';\n\nconst StyledTalksContainer = styled.div`\n  flex: 1 ${p => (p.double ? '50%' : '28%')};\n  padding: 1rem;\n  background-color: white;\n  border: 1px solid ${colors.greyLight};\n\n  @media (${mediaQueries.medium}) {\n    flex: 1 100%;\n    border-left: none;\n    border-right: none;\n  }\n`;\n\nconst StyledTalksType = styled.span`\n  color: ${colors.knowit.green};\n  font-size: 0.9rem;\n`;\n\nconst StyledTalksRoom = styled.span`\n  font-size: 1.2rem;\n  float: right;\n  color: ${colors.knowit.green};\n`;\nconst Talks = ({ collectionTitle, entry, columnSize }) => {\n  return (\n    <StyledTalksContainer double={entry.columnSize === 2}>\n      <StyledTalksType>{collectionTitle}</StyledTalksType>\n      <StyledTalksRoom>{entry.room}</StyledTalksRoom>\n      {entry.slots.map((talkId, index) => (\n        <Talk key={`${talkId}_${index}`} talkId={talkId} />\n      ))}\n    </StyledTalksContainer>\n  );\n};\n\nTalks.propTypes = {\n  collectionTitle: PropTypes.string,\n  entry: PropTypes.object,\n};\n\nexport default Talks;\n","import Talks from './Talks';\n\nexport default Talks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport Talks from './Talks';\nimport mediaQueries from '../util/mediaQueries';\n\nconst StyledEntries = styled.div`\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 90%;\n\n  @media (${mediaQueries.medium}) {\n    width: 100%;\n  }\n`;\n\nconst Entries = ({ entries, collectionTitle }) => {\n  return (\n    <StyledEntries>\n      {entries.map((entry, index) => (\n        <Talks key={entry.room} entry={entry} />\n      ))}\n    </StyledEntries>\n  );\n};\n\nEntries.propTypes = {\n  entries: PropTypes.array,\n  collectionTitle: PropTypes.string,\n};\n\nexport default Entries;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledSlot, StyledSlotTime } from './SlotStyles';\nimport Entries from '../Entries';\n\nconst EntriesSlot = ({ collection }) => {\n  return (\n    <StyledSlot>\n      <StyledSlotTime>{collection.time}</StyledSlotTime>\n      <Entries\n        entries={collection.entries}\n        collectionTitle={collection.title}\n      />\n    </StyledSlot>\n  );\n};\n\nEntriesSlot.propTypes = {\n  collection: PropTypes.object,\n};\n\nexport default EntriesSlot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\nimport viewmodel from '../../json';\n\nconst Village = ({ villageId }) => {\n  const village = viewmodel.villages.find(vill => villageId === vill.id);\n  if (!village) {\n    return null;\n  }\n  return (\n    <li>\n      <Link to={village.path}>{village.name}</Link>\n    </li>\n  );\n};\n\nVillage.propTypes = {\n  villageId: PropTypes.string,\n};\n\nexport default Village;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Village from './Village';\n\nconst Villages = ({ villages }) => {\n  if (!villages || villages.length === 0) {\n    return null;\n  }\n  return (\n    <ul>\n      {villages.map(villageId => (\n        <Village key={villageId} villageId={villageId} />\n      ))}\n    </ul>\n  );\n};\n\nVillages.propTypes = {\n  village: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Villages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { StyledSlot, StyledSlotTime, StyledSlotTitle } from './SlotStyles';\nimport Villages from '../Villages/Villages';\n\nconst StyledSpan = styled.span`\n  padding: 2rem;\n  display: inline-block;\n`;\n\nconst OtherSlot = ({ collection }) => {\n  return (\n    <StyledSlot>\n      <StyledSlotTime>{collection.time}</StyledSlotTime>\n      <StyledSlotTitle background=\"white\">\n        <StyledSpan>{collection.title}</StyledSpan>\n        <Villages villages={collection.villages} />\n      </StyledSlotTitle>\n    </StyledSlot>\n  );\n};\n\nOtherSlot.propTypes = {\n  collection: PropTypes.object,\n};\n\nexport default OtherSlot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BreakSlot from './BreakSlot';\nimport EntriesSlot from './EntriesSlot';\nimport OtherSlot from './OtherSlot';\n\nconst Slot = ({ collection }) => {\n  if (!collection) {\n    return null;\n  } else if (collection.isBreak) {\n    return <BreakSlot collection={collection} />;\n  } else if (collection.entries) {\n    return <EntriesSlot collection={collection} />;\n  }\n  return <OtherSlot collection={collection} />;\n};\n\nSlot.propTypes = {\n  collection: PropTypes.object,\n};\n\nexport default Slot;\n","import Slot from './Slot';\n\nexport default Slot;\n","import React from 'react';\nimport Link from 'gatsby-link';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport viewmodel from '../json';\nimport ButtonGroup from '../components/ButtonGroup';\nimport Button from '../components/Button';\nimport Slot from '../components/Slot';\nimport Content, { ContentContainer } from '../components/Content';\nimport colors from '../util/colors';\nimport mediaQueries from '../util/mediaQueries';\n\nconst buttonGroupStyle = css`\n  margin: 2rem auto;\n`;\n\nconst pickDayButtonsStyle = css`\n  margin: 0 auto;\n  margin-bottom: -1rem;\n  z-index: 1;\n\n  @media (${mediaQueries.medium}) {\n    display: none;\n  }\n`;\n\nconst buttonStyle = css`\n  border-radius: 0;\n  box-shadow: none;\n`;\n\nconst StyledSelect = styled.select`\n  border-radius: 0;\n  height: 3rem;\n  width: 80%;\n  background-color: white;\n  margin: 0 auto;\n  display: none;\n\n  @media (${mediaQueries.medium}) {\n    display: block;\n  }\n`;\n\nconst StyledHeader = styled.h1`\n  margin: 0 auto;\n`;\n\nconst linkStyle = css`\n  text-transform: uppercase;\n  color: ${colors.primary};\n  font-size: 1.2rem;\n  text-transform: uppercase;\n\n  &:hover,\n  &:focus,\n  &:visited {\n    color: ${colors.primary};\n  }\n`;\n\nclass SchedulePage extends React.Component {\n  constructor() {\n    super();\n    this.onDayClick = this.onDayClick.bind(this);\n    this.onSelectChange = this.onSelectChange.bind(this);\n    this.state = {\n      activeIndex: 0,\n    };\n  }\n\n  onDayClick(evt, activeIndex) {\n    evt.preventDefault();\n    this.setState({ activeIndex });\n  }\n\n  onSelectChange(evt) {\n    this.setState({ activeIndex: evt.target.value });\n  }\n\n  render() {\n    const activeDay =\n      viewmodel && viewmodel.schedules[this.state.activeIndex]\n        ? viewmodel.schedules[this.state.activeIndex]\n        : undefined;\n    if (!activeDay || !activeDay.day) {\n      return <span>Her skjedde noe feil gitt...</span>;\n    }\n    return (\n      <Content backgroundColor={colors.greyLightest}>\n        <StyledHeader>Skjema</StyledHeader>\n        <ButtonGroup css={buttonGroupStyle}>\n          <Link to=\"/\" css={linkStyle}>\n            Forside\n          </Link>\n          <Link to=\"/speakers/\" css={linkStyle}>\n            Talere\n          </Link>\n        </ButtonGroup>\n        <ButtonGroup css={pickDayButtonsStyle}>\n          {viewmodel.schedules.map((day, index) => (\n            <Button\n              key={day.day}\n              css={buttonStyle}\n              appearance={this.state.activeIndex === index ? 'active' : ''}\n              onClick={evt => this.onDayClick(evt, index)}>\n              {day.day}\n            </Button>\n          ))}\n        </ButtonGroup>\n        <StyledSelect onChange={this.onSelectChange}>\n          {viewmodel.schedules.map((day, index) => (\n            <option\n              key={day.day}\n              value={index}\n              css={buttonStyle}\n              onClick={evt => this.onDayClick(evt, index)}>\n              {day.day}\n            </option>\n          ))}\n        </StyledSelect>\n        <ContentContainer backgroundColor={colors.greyLightest}>\n          {activeDay.collections.map((collection, index) => (\n            <Slot\n              key={`${collection.title}_${index}`}\n              collection={collection}\n            />\n          ))}\n        </ContentContainer>\n      </Content>\n    );\n  }\n}\n\nexport default SchedulePage;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React from 'react';\n\nconst Person = ({ ...rest }) => {\n  return (\n    <svg\n      {...rest}\n      fill=\"#000000\"\n      height=\"48\"\n      viewBox=\"0 0 24 24\"\n      width=\"48\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\" />\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n  );\n};\n\nexport default Person;\n"],"sourceRoot":""}