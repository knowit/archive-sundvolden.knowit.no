{"version":3,"sources":["webpack:///./src/components/Button.jsx","webpack:///./src/util/cookieHelper.js","webpack:///./src/components/Slot/SlotStyles.js","webpack:///./src/components/Favorites/AddFavorite.jsx","webpack:///./src/components/Slot/Slot.jsx","webpack:///./src/components/Slot/index.js","webpack:///./src/components/Slot/Slots.jsx"],"names":["hoverStyle","css","darken","colors","blue","strippedStyle","name","styles","appearances","stripped","outline","active","StyledButton","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","target","p","appearance","Button","_ref","children","rest","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","propTypes","PropTypes","string","arrowBottom","bool","setCookie","value","removeCookie","expires","d","Date","setTime","getTime","toUTCString","document","cookie","getCookie","cookies","cookieParts","split","length","pop","shift","typeColors","other","blueDark","talk","green","keynote","gridTemplates","desktop","mobile","StyledSlotGridWrapper","spacing","large","small","mediaQueries","medium","StyledSlotGrid","normal","type","StyledType","StyledTime","StyledTitle","StyledFavorite","StyledDuration","StyledRoom","StyledRoomLabel","grey","StyledRoomIcon","StyledRoomName","StyledDescription","StyledSpeakers","StyledUserIcon","StyledUserLabel","StyledUserName","StyledFavoriteIcon","styled","FavoriteIcon","_templateObject","heartRed","StyledFavoriteText","_templateObject2","StyledFavoriteBorder","FavoriteBorder","_templateObject3","AddFavorite","title","date","startTime","setFavorites","favorites","uniqueSlotIdentifier","isFavoriteActive","find","fav","core_browser_esm","onClick","updatedCookie","filter","favorite","newFavorites","concat","css_browser_esm","fontSize","maxLengthStyle","maxLength","expandMoreStyle","rotation","ShowButton","_ref2","showDescription","setShowDescription","ExpandMore_default","a","isRequired","func","Slot","_ref3","slot","descriptionRef","React","createRef","_useState","useState","undefined","setMaxLength","_useState2","useEffect","current","getBoundingClientRectData","getBoundingClientRect","height","width","spacingUnit","description","SlotStyles","start","end","duration","ref","Slot_ref","Slot_ShowButton","Favorites_AddFavorite","time","userIds","Person_default","map","userId","room","Home_default","object","Slots","slots","removeFavorite","noGroupBy","updateFavorites","JSON","stringify","favoritesCookies","currentCookie","parse","index","components_Slot","key","groupedByStart","groupBy","keys","startKey","arrayOf","defaultProps"],"mappings":"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","file":"3-e3d30daec8bda8e014d5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../util/colors';\nimport darken from 'polished/lib/color/darken';\n\nconst hoverStyle = css`\n  background-color: ${darken(0.1, colors.blue)};\n  border: 1px solid ${darken(0.1, colors.blue)};\n  color: white;\n`;\n\nconst strippedStyle = css`\n  transition: background-color none;\n  padding: 0;\n  border-radius: 0;\n  font-size: 1em;\n  color: inherit;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  display: inline-block;\n  box-shadow: none;\n`;\n\nconst appearances = {\n  stripped: css`\n    ${strippedStyle};\n    &:hover,\n    &:focus {\n      ${strippedStyle};\n    }\n  `,\n  outline: css`\n    background-color: white;\n    color: ${colors.blue};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.blue};\n      border-color: ${colors.blue};\n      color: white;\n    }\n  `,\n  active: hoverStyle,\n};\nexport const StyledButton = styled.button`\n  padding: 0.8rem 3rem;\n  background-color: ${colors.blue};\n  border: 1px solid ${colors.blue};\n  color: white;\n  font-size: 1.2rem;\n  font-weight: 100;\n  font-family: 'Raleway', sans-serif;\n  border-radius: 30px;\n  &:hover,\n  &:focus {\n    ${hoverStyle};\n  }\n  ${p => p.appearance && appearances[p.appearance]};\n}\n`;\n\nconst Button = ({ appearance, children, ...rest }) => (\n  <StyledButton appearance={appearance} {...rest}>\n    {children}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  appearance: PropTypes.string,\n  arrowBottom: PropTypes.bool,\n};\n\nexport default Button;\n","export const setCookie = (name, value, removeCookie) => {\n  let expires;\n  if (removeCookie) {\n    expires = 'Thu, 01 Jan 1970 00:00:01 GMT';\n  } else {\n    const d = new Date();\n    d.setTime(d.getTime() + 9999 * 24 * 60 * 60 * 1000);\n    expires = `expires=${d.toUTCString()}`;\n  }\n  document.cookie = `${name}=${value}; ${expires}; path=/`;\n};\n\nexport const getCookie = (name, cookies) => {\n  const value = `; ${cookies}`;\n  const cookieParts = value.split(`; ${name}=`);\n  if (cookieParts.length > 1) {\n    return cookieParts\n      .pop()\n      .split(';')\n      .shift();\n  }\n  return null;\n};\n\nexport const isValidCookie = (name, cookies) =>\n  getCookie(name, cookies) !== null;\n\nexport const deleteCookie = name => {\n  setCookie(name, '', true);\n};\n","import styled from '@emotion/styled';\nimport css from '@emotion/css';\nimport colors from '../../util/colors';\nimport mediaQueries from '../../util/mediaQueries';\nimport spacing from '../../util/spacing';\n\nexport const typeColors = {\n  other: colors.blueDark,\n  talk: colors.green,\n  keynote: colors.blue,\n};\n\nconst gridTemplates = {\n  talk: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% auto 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  keynote: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% auto 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  other: {\n    desktop: css`\n      grid-template-rows: auto auto;\n      grid-template-columns: 10% auto 10%;\n      align-items: center;\n      grid-template-areas:\n        'time title favorite'\n        'time    title    favorite';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time  favorite'\n        '.     favorite'\n        'title title';\n    `,\n  },\n};\n\nexport const StyledSlotGridWrapper = styled.div`\n  margin-top: ${spacing.large};\n  display: grid;\n  background-color: white;\n  border-radius: 5px;\n  grid-template-rows: auto;\n  grid-template-columns: ${spacing.small} auto;\n  grid-template-areas: 'type allContent';\n\n  &:last-child {\n    margin-bottom: ${spacing.large};\n  }\n\n  @media (${mediaQueries.medium}) {\n    margin: ${spacing.small} 0;\n    grid-template-rows: ${spacing.small} auto;\n    grid-template-columns: auto;\n    grid-template-areas:\n      'type'\n      'allContent';\n  }\n`;\n\nexport const StyledSlotGrid = styled.div`\n  display: grid;\n  grid-area: allContent;\n  padding: ${spacing.normal};\n  grid-row-gap: ${spacing.small};\n  grid-column-gap: ${spacing.normal};\n  ${p =>\n    p.type ? gridTemplates[p.type].desktop : gridTemplates.other.desktop};\n  & b {\n    font-weight: 900;\n  }\n\n  @media (${mediaQueries.medium}) {\n    ${p =>\n      p.type ? gridTemplates[p.type].mobile : gridTemplates.other.mobile};\n  }\n`;\n\nexport const StyledType = styled.div`\n  grid-area: type;\n  background-color: ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  border: 1px solid ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n\n  @media (${mediaQueries.medium}) {\n    border-bottom-left-radius: 0;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  }\n`;\n\nexport const StyledTime = styled.div`\n  grid-area: time;\n`;\n\nexport const StyledTitle = styled.div`\n  grid-area: title;\n`;\n\nexport const StyledFavorite = styled.div`\n  grid-area: favorite;\n  justify-self: right;\n`;\n\nexport const StyledDuration = styled.div`\n  grid-area: duration;\n`;\n\nexport const StyledRoom = styled.div`\n  grid-area: room;\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: 30px 190px auto;\n  grid-template-areas: 'roomIcon roomLabel roomName';\n  @media (${mediaQueries.medium}) {\n    grid-template-rows: 30px auto;\n    grid-template-columns: 30px auto;\n    grid-template-areas:\n      'roomIcon roomLabel'\n      'roomIcon roomName';\n  }\n`;\n\nexport const StyledRoomLabel = styled.div`\n  grid-area: roomLabel;\n  display: flex;\n  & > svg {\n    padding-right: ${spacing.small};\n    color: ${colors.grey};\n  }\n`;\n\nexport const StyledRoomIcon = styled.div`\n  grid-area: roomIcon;\n`;\nexport const StyledRoomName = styled.b`\n  grid-area: roomName;\n`;\n\nexport const StyledDescription = styled.div`\n  grid-area: description;\n`;\n\nexport const StyledSpeakers = styled.div`\n  grid-area: speakers;\n  display: grid;\n  grid-auto-rows: min-content;\n  grid-template-rows: auto;\n  grid-template-columns: 30px 190px auto;\n  grid-template-areas: 'speakerIcon speakerLabel speakerName';\n  @media (${mediaQueries.medium}) {\n    grid-template-rows: 30px auto;\n    grid-template-columns: 30px auto;\n    grid-template-areas:\n      'speakerIcon speakerLabel'\n      'speakerIcon speakerName';\n  }\n`;\n\nexport const StyledUserIcon = styled.div`\n  grid-area: speakerIcon;\n`;\n\nexport const StyledUserLabel = styled.div`\n  grid-area: speakerLabel;\n  display: flex;\n  & > svg {\n    padding-right: ${spacing.small};\n    color: ${colors.grey};\n  }\n`;\n\nexport const StyledUserName = styled.b`\n  grid-area: speakerName;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport colors from '../../util/colors';\nimport Button from '../Button';\nimport css from '@emotion/css';\nimport spacing from '../../util/spacing';\nimport styled from '@emotion/styled-base';\n\nconst StyledFavoriteIcon = styled(FavoriteIcon)`\n  color: ${colors.heartRed};\n`;\n\nconst StyledFavoriteText = styled('b')`\n  display: block;\n`;\n\nconst StyledFavoriteBorder = styled(FavoriteBorder)`\n  color: ${colors.grey};\n\n  &:hover,\n  &:focus {\n    color: ${colors.heartRed};\n  }\n`;\n\nconst AddFavorite = ({ title, date, startTime, setFavorites, favorites }) => {\n  const uniqueSlotIdentifier = `${date}_${startTime}_${title}`;\n  const isFavoriteActive = !!favorites.find(\n    fav => fav === uniqueSlotIdentifier,\n  );\n  const changeFavorites = () => {\n    if (isFavoriteActive) {\n      const updatedCookie = favorites.filter(\n        favorite => favorite !== uniqueSlotIdentifier,\n      );\n      setFavorites(updatedCookie);\n    } else {\n      const newFavorites = [...favorites, uniqueSlotIdentifier];\n      setFavorites(newFavorites);\n    }\n  };\n\n  return (\n    <Button\n      appearance=\"stripped\"\n      onClick={changeFavorites}\n      css={css`\n        margin-right: ${spacing.small};\n      `}>\n      {isFavoriteActive ? (\n        <StyledFavoriteIcon fontSize=\"large\" />\n      ) : (\n        <StyledFavoriteBorder fontSize=\"large\" />\n      )}\n      <StyledFavoriteText>\n        {isFavoriteActive ? 'Fjern' : 'Lagre'}\n      </StyledFavoriteText>\n    </Button>\n  );\n};\n\nexport default AddFavorite;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Home from '@material-ui/icons/Home';\nimport Person from '@material-ui/icons/Person';\nimport AddFavorite from '../Favorites/AddFavorite';\nimport spacing from '../../util/spacing';\nimport Button from '../Button';\nimport {\n  StyledSlotGridWrapper,\n  StyledSlotGrid,\n  StyledTitle,\n  StyledType,\n  StyledDescription,\n  StyledSpeakers,\n  StyledFavorite,\n  StyledRoom,\n  StyledDuration,\n  StyledTime,\n  StyledUserName,\n  StyledUserLabel,\n  StyledRoomLabel,\n  StyledRoomName,\n  StyledRoomIcon,\n  StyledUserIcon,\n} from './SlotStyles';\n\nconst maxLengthStyle = maxLength => css`\n  max-width: ${maxLength}px;\n  overflow: hidden;\n  position: relative;\n  white-space: nowrap;\n  display: inline-block;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: calc(${maxLength}px - 60px);\n    height: 100%;\n    width: 60px;\n    background: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 0) 30%,\n      rgba(255, 255, 255, 1) 100%\n    );\n  }\n`;\n\nconst expandMoreStyle = rotation => css`\n  transform: rotate(${rotation}deg);\n  transition: transform 1s ease-in-out;\n`;\n\nconst ShowButton = ({ showDescription, setShowDescription }) => (\n  <Button\n    appearance=\"stripped\"\n    onClick={() => setShowDescription(!showDescription)}>\n    <ExpandMore\n      css={showDescription ? expandMoreStyle(180) : expandMoreStyle(0)}\n    />\n  </Button>\n);\n\nShowButton.propTypes = {\n  showDescription: PropTypes.bool.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n};\n\nconst Slot = ({ slot, date, favorites, setFavorites }) => {\n  const descriptionRef = React.createRef();\n  const [maxLength, setMaxLength] = useState(undefined);\n  const [showDescription, setShowDescription] = useState(false);\n\n  useEffect(\n    () => {\n      if (descriptionRef && descriptionRef.current) {\n        const getBoundingClientRectData = descriptionRef.current.getBoundingClientRect();\n        if (getBoundingClientRectData.height > 25) {\n          setMaxLength(\n            getBoundingClientRectData.width - spacing.spacingUnit * 3,\n          );\n        }\n      }\n    },\n    [slot.description],\n  );\n  return (\n    <StyledSlotGridWrapper>\n      <StyledType type={slot.type} />\n      <StyledSlotGrid type={slot.type}>\n        <StyledTitle>\n          <b>{slot.title}</b>\n        </StyledTitle>\n        <StyledTime>\n          <b>{`${slot.start} ${slot.end ? '-' : ''} ${slot.end || ''}`}</b>\n        </StyledTime>\n        {slot.duration && (\n          <StyledDuration>{slot.duration || 'Ikke oppgitt'}</StyledDuration>\n        )}\n        {slot.description && (\n          <StyledDescription ref={descriptionRef}>\n            <div\n              css={\n                maxLength && !showDescription\n                  ? maxLengthStyle(maxLength)\n                  : css`\n                      display: inline-block;\n                    `\n              }>\n              {slot.description}\n              {maxLength &&\n                showDescription && (\n                  <ShowButton\n                    showDescription={showDescription}\n                    setShowDescription={setShowDescription}\n                  />\n                )}\n            </div>\n            {maxLength &&\n              !showDescription && (\n                <ShowButton\n                  showDescription={showDescription}\n                  setShowDescription={setShowDescription}\n                />\n              )}\n          </StyledDescription>\n        )}\n        <StyledFavorite>\n          <AddFavorite\n            title={slot.title}\n            startTime={slot.start || slot.time}\n            setFavorites={setFavorites}\n            favorites={favorites}\n            date={slot.date}\n          />\n        </StyledFavorite>\n        {slot.userIds && (\n          <StyledSpeakers>\n            <StyledUserIcon>\n              <Person fontSize=\"small\" />\n            </StyledUserIcon>\n            <StyledUserLabel>Foredragsholdere</StyledUserLabel>\n            <StyledUserName>\n              {slot.userIds.map(userId => (\n                <span>{userId}</span>\n              ))}\n            </StyledUserName>\n          </StyledSpeakers>\n        )}\n        {slot.room && (\n          <StyledRoom>\n            <StyledRoomIcon>\n              <Home fontSize=\"small\" />\n            </StyledRoomIcon>\n            <StyledRoomLabel>Rom:</StyledRoomLabel>\n            <StyledRoomName>{slot.room}</StyledRoomName>\n          </StyledRoom>\n        )}\n      </StyledSlotGrid>\n    </StyledSlotGridWrapper>\n  );\n};\n\nSlot.propTypes = {\n  slot: PropTypes.object,\n};\n\nexport default Slot;\n","import Slot from './Slot';\n\nexport default Slot;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport groupBy from 'lodash/groupBy';\nimport Slot from '.';\nimport { getCookie, setCookie } from '../../util/cookieHelper';\n\nconst Slots = ({ slots, removeFavorite, noGroupBy }) => {\n  const [favorites, setFavorites] = useState([]);\n\n  const updateFavorites = newFavorites => {\n    setCookie('favorites', JSON.stringify(newFavorites));\n    setFavorites(newFavorites);\n    removeFavorite && removeFavorite(newFavorites);\n  };\n\n  useEffect(() => {\n    const favoritesCookies = getCookie('favorites', document.cookie);\n    const currentCookie = favoritesCookies ? JSON.parse(favoritesCookies) : [];\n    setFavorites(currentCookie);\n  }, []);\n\n  if (noGroupBy) {\n    return slots.map((slot, index) => (\n      <Slot\n        key={`${slot.title}_${index}`}\n        slot={slot}\n        setFavorites={updateFavorites}\n        favorites={favorites}\n      />\n    ));\n  }\n  const groupedByStart = groupBy(slots, slot => slot.start);\n  return Object.keys(groupedByStart).map(startKey => (\n    <div>\n      <h3>{startKey}</h3>\n      {groupedByStart[startKey].map((slot, index) => (\n        <Slot\n          key={`${slot.title}_${index}`}\n          slot={slot}\n          setFavorites={updateFavorites}\n          favorites={favorites}\n        />\n      ))}\n    </div>\n  ));\n};\n\nSlots.propTypes = {\n  slots: PropTypes.arrayOf(PropTypes.object),\n  removeFavorite: PropTypes.func,\n  noGroupBy: PropTypes.bool,\n};\n\nSlots.defaultProps = {\n  noGroupBy: false,\n};\n\nexport default Slots;\n"],"sourceRoot":""}