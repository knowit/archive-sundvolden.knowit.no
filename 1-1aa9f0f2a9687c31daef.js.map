{"version":3,"sources":["webpack:///./src/util/colors.js","webpack:///./src/util/spacing.js","webpack:///./src/util/mediaQueries.js","webpack:///./src/json/index.js","webpack:///./src/components/Button.jsx","webpack:///./src/components/Content.jsx","webpack:///./src/graphql/airtable.js","webpack:///./src/components/Favorites/AddFavorite.jsx","webpack:///./src/components/Speaker/SpeakerModal.jsx","webpack:///./src/components/Speaker/SpeakerFavourites.jsx","webpack:///./src/components/Speaker/Speaker.jsx","webpack:///./src/components/Speaker/index.js","webpack:///./src/components/Slot/SlotSpeakers.jsx","webpack:///./src/components/Slot/Slot.jsx","webpack:///./src/components/Slot/index.js","webpack:///./src/components/Slot/Slots.jsx","webpack:///./src/layouts/GoogleMaps.jsx","webpack:///./src/layouts/Navigation.jsx","webpack:///./src/layouts/index.js","webpack:///./src/components/Seperator.jsx","webpack:///./src/components/ContentSection.jsx","webpack:///./src/components/SafeLink.jsx","webpack:///./src/util/cookieHelper.js","webpack:///./src/components/Slot/SlotStyles.js"],"names":["__webpack_require__","d","__webpack_exports__","oldColors","polished_lib_color_darken__WEBPACK_IMPORTED_MODULE_0__","polished_lib_color_darken__WEBPACK_IMPORTED_MODULE_0___default","n","primary","secondary","grey","greyLight","greyLighter","greyLightest","greyDark","background","default","dark","darken","darker","backgroundGray","grayDark","knowit","green","blueDarkest","blueDark","blue","blueLight","blueLighest","yellow","heartRed","spacingUnit","xsmall","small","normal","medium","large","xlarge","xxlarge","season","short","shortCapitalized","long","longCapitalized","eventData","date","startDate","longDate","venue","adress","city","country","year","monthNumber","endDate","cities","viewmodel","title","event","Object","assign","gmapsUrl","meta","description","keywords","days","label","schedules","talks","villages","hoverStyle","css","colors","strippedStyle","name","styles","appearances","stripped","outline","active","StyledButton","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_5__","target","p","appearance","Button","_ref","children","rest","_objectWithoutPropertiesLoose","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","_extends","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__","backgroundColor","globalStyles","spacing","Content","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6__","fetchSlots","data","_public_static_d_921119627_json__WEBPACK_IMPORTED_MODULE_1__","allAirtable","edges","flatMap","edge","node","StyledFavoriteIcon","styled","FavoriteIcon","_templateObject","StyledFavoriteText","_templateObject2","StyledFavoriteBorder","FavoriteBorder","_templateObject3","AddFavorite","startTime","setFavorites","favorites","uniqueSlotIdentifier","isFavoriteActive","find","fav","core_browser_esm","onClick","updatedCookie","filter","favorite","newFavorites","concat","_toConsumableArray","fontSize","useStyles","makeStyles","theme","modal","display","margin","StyledModal","styled_base_browser_esm","mediaQueries","SpeakerModal","_ref2","buttonText","classes","_React$useState","React","useState","open","setOpen","handleClose","css_browser_esm","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","SpeakerModal_ref","Close_default","a","StyledSpeakerFavourites","StyledList","favouriteCategories","SpeakerFavourites","speaker_favourites","splittedFavourites","split","map","favourite","index","length","react_default","Fragment","SpeakerFavourites_ref","key","StyledSpeakerContainer","StyledTitle","StyledDescription","StyledSpeakerRecreation","StyledImage","StyledIcon","Speaker","_ref$slot","slot","userIds","speaker_bio","speaker_image","speaker_recreation","imageUrl","localFiles","publicURL","src","Person_default","Speaker_SpeakerFavourites","SlotSpeakers","Speaker_SpeakerModal","components_Speaker","maxLengthStyle","maxLength","expandMoreStyle","rotation","ShowButton","showDescription","setShowDescription","ExpandMore_default","Slot","_ref3","viewType","descriptionRef","createRef","_useState","undefined","_useState2","SlotStyles","type","rowGap","room","start","end","duration","ref","Slot_ref","Slot_ShowButton","Favorites_AddFavorite","time","Slot_SlotSpeakers","Home_default","StyledSlots","Slots","slots","removeFavorite","noGroupBy","isFavourites","updateFavorites","setCookie","JSON","stringify","useEffect","favoritesCookies","getCookie","document","cookie","currentCookie","parse","components_Slot","groupedByDate","groupBy","keys","sort","startKey","day","b","groupedByStart","defaultProps","StyledGoogleMapsWrapper","StyledGoogleMapsBlocker","StyleGoogleMapsContent","StyledGoogleMaps","GoogleMaps","href","rel","frameBorder","StyledNavigationContainer","StyledNavigation","StyledPushElement","routes","to","StyledSafeLink","SafeLink","Navigation","route","activeStyle","borderBottom","marginBottom","DefaultLayout","showGoogleMaps","Helmet_default","content","layouts_Navigation","layouts_GoogleMaps","StyledSvg","SectionSeparator","position","previousSectionColor","nextSectionColor","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","transform","points","StyledSection","minHeight","color","StyledInnerSection","ContentSection","withTopSeperator","withBottomSeperator","ContentSection_objectWithoutPropertiesLoose","react","ContentSection_extends","Seperator","linkStyle","hoverColor","gatsby_link__WEBPACK_IMPORTED_MODULE_7___default","value","removeCookie","expires","Date","setTime","getTime","toUTCString","encodeURIComponent","cookies","cookieParts","decodeURIComponent","pop","shift","typeColors","other","talk","keynote","gridTemplates","desktop","mobile","responsiveStyles","speakers","getViewTypeForDesktop","getStyledSlotGridWrapperStyle","isMobile","_emotion_css__WEBPACK_IMPORTED_MODULE_1__","StyledSlotGridWrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","getSlotGridStyle","desktopOrMobile","StyledSlotGrid","StyledType","StyledTime","StyledFavorite","StyledDuration","StyledRoom","StyledRoomLabel","StyledRoomIcon","StyledRoomName","StyledSpeakers","StyledUserIcon","StyledUserLabel","StyledUserName"],"mappings":"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","file":"1-1aa9f0f2a9687c31daef.js","sourcesContent":["import darken from 'polished/lib/color/darken';\n\nconst greyLight = '#e8e3e3';\nconst greyLightest = '#f8f8f8';\n\nexport const oldColors = {\n  primary: '#007bba',\n  secondary: '#28334A',\n  grey: '#777777',\n  greyLight: greyLight,\n  greyLighter: '#eff0f2',\n  greyLightest: greyLightest,\n  greyDark: '#4d4d4d',\n\n  background: {\n    default: '#ffffff',\n    dark: darken(0.1, '#ffffff'),\n    darker: darken(0.2, '#ffffff'),\n    backgroundGray: greyLightest,\n    grayDark: '#e4e4e4',\n  },\n  knowit: {\n    green: '#49b0a4',\n  },\n};\n\nexport default {\n  blueDarkest: '#202736',\n  blueDark: '#28334a',\n  blue: '#3177f8',\n  blueLight: '#34c6fc',\n  blueLighest: '#b4eaf4',\n  green: '#339037',\n  grey: '#8b98a4',\n  yellow: '#ffff70',\n  heartRed: '#e95971',\n};\n","const spacingUnit = 16;\n\nexport default {\n  spacingUnit,\n  xsmall: `${spacingUnit / 4}px`,\n  small: `${spacingUnit / 2}px`,\n  normal: `${spacingUnit}px`,\n  medium: `${spacingUnit * 1.5}px`,\n  large: `${spacingUnit * 2}px`,\n  xlarge: `${spacingUnit * 2.5}px`,\n  xxlarge: `${spacingUnit * 3}px`,\n};\n","export default {\n  xxlarge: 'min-width: 1800px',\n  xlarge: 'min-width: 1200px',\n  large: 'min-width: 800px',\n  medium: 'max-width: 800px',\n  small: 'max-width: 600px',\n  xsmall: 'max-width: 400px',\n};\n","export const villages = [];\n\nconst year = '2019';\nconst season = {\n  short: 'høst',\n  shortCapitalized: 'Høst',\n  long: 'høsten',\n  longCapitalized: 'Høsten',\n};\nconst startDate = '18. oktober';\nconst endDate = '21. oktober';\n\nexport const eventData = {\n  date: `${startDate} - ${endDate} ${year}`,\n  longDate: `${startDate} - ${endDate} ${year}`,\n  venue: 'Hotel Grandior',\n  adress: 'Na Poříčí, Florenc, Praha 1-Florenc-Praha 1',\n  city: 'Praha',\n  country: 'Tsjekkia',\n  year,\n  monthNumber: 10,\n  season,\n  startDate,\n  endDate,\n  cities: [\n    'Berlin',\n    'Istanbul',\n    'Madrid',\n    'Dublin',\n    'Svalbard',\n    'Reykjavik',\n    'Palma',\n    'Ljubljana',\n    'Strømstad',\n  ],\n};\n\nconst viewmodel = {\n  title: `Fagseminar ${eventData.season.longCapitalized} ${eventData.year}`,\n  event: {\n    ...eventData,\n    gmapsUrl:\n      'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d14415.927845052565!2d14.432631060963283!3d50.082471035905606!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x470b94be2dfe00a7%3A0x723fd65dc8481081!2sGrandior+Hotel+Prague!5e0!3m2!1sno!2sno!4v1558968128473!5m2!1sno!2sno',\n  },\n  meta: {\n    title: `Knowit Objectnet Fagseminar ${eventData.year}`,\n    description: `Knowit Objectnet arrangerer to fagseminarer årlig. Det er de ansatte selv som lager programmet. ${season.longCapitalized} ${year} vil den bli avholdt ${eventData.date} i ${eventData.city}, ${eventData.country}.`,\n    keywords: `Fagseminar, ${eventData.city}, ${eventData.country}, Fag, Foredrag`,\n  },\n  days: [\n    {\n      date: '18',\n      label: 'Fredag 18.10',\n    },\n    {\n      date: '19',\n      label: 'Lørdag 19.10',\n    },\n    {\n      date: '20',\n      label: 'Søndag 20.10',\n    },\n    {\n      date: '21',\n      label: 'Mandag 21.10',\n    },\n  ],\n  schedules: [],\n  talks: {},\n  villages: [],\n};\n\nexport default viewmodel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../util/colors';\nimport darken from 'polished/lib/color/darken';\n\nconst hoverStyle = css`\n  background-color: ${darken(0.1, colors.blue)};\n  border: 1px solid ${darken(0.1, colors.blue)};\n  color: white;\n`;\n\nconst strippedStyle = css`\n  transition: background-color none;\n  padding: 0;\n  border-radius: 0;\n  font-size: 1em;\n  color: inherit;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  display: inline-block;\n  box-shadow: none;\n`;\n\nconst appearances = {\n  stripped: css`\n    ${strippedStyle};\n    &:hover,\n    &:focus {\n      ${strippedStyle};\n    }\n  `,\n  outline: css`\n    background-color: white;\n    color: ${colors.blue};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.blue};\n      border-color: ${colors.blue};\n      color: white;\n    }\n  `,\n  active: hoverStyle,\n};\nexport const StyledButton = styled.button`\n  padding: 0.8rem 3rem;\n  background-color: ${colors.blue};\n  border: 1px solid ${colors.blue};\n  color: white;\n  font-size: 1.2rem;\n  font-weight: 100;\n  font-family: 'Raleway', sans-serif;\n  border-radius: 30px;\n  &:hover,\n  &:focus {\n    ${hoverStyle};\n  }\n  ${p => p.appearance && appearances[p.appearance]};\n}\n`;\n\nconst Button = ({ appearance, children, ...rest }) => (\n  <StyledButton appearance={appearance} {...rest}>\n    {children}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  appearance: PropTypes.string,\n  arrowBottom: PropTypes.bool,\n};\n\nexport default Button;\n","import React, { Fragment } from 'react';\nimport styled from '@emotion/styled';\nimport { Global, css } from '@emotion/core';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\n\nconst StyledContent = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  background-color: ${p => p.backgroundColor || 'white'};\n`;\n\nconst globalStyles = css`\n  html,\n  body {\n    font-size: 16px;\n    color: ${colors.blueDark};\n    word-spacing: ${spacing.spacingUnit / 6}px;\n    line-height: ${spacing.spacingUnit * 1.4}px;\n  }\n\n  body {\n    margin: 0;\n    font-family: 'Raleway', sans-serif;\n  }\n\n  .c-schedule-transition-enter {\n    opacity: 0.01;\n  }\n\n  .c-schedule-transition-enter.c-schedule-transition-enter-active {\n    opacity: 1;\n    transition: opacity 500ms ease-in;\n  }\n\n  .c-schedule-transition-leave {\n    opacity: 1;\n  }\n\n  .c-schedule-transition-leave.c-schedule-transition-leave-active {\n    opacity: 0.01;\n    transition: opacity 300ms ease-in;\n  }\n  a {\n    -webkit-tap-highlight-color: transparent;\n  }\n`;\n\nconst Content = ({ children, ...rest }) => (\n  <Fragment>\n    <Global styles={globalStyles} />\n    <StyledContent {...rest}>{children}</StyledContent>\n  </Fragment>\n);\n\nexport default Content;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const fetchSlots = () => {\n  const data = useStaticQuery(graphql`\n    query data {\n      allAirtable {\n        edges {\n          node {\n            data {\n              title\n              userIds\n              email\n              description\n              type\n              start\n              end\n              date\n              duration\n              room\n              speaker_bio\n              speaker_favourites\n              speaker_recreation\n              speaker_image {\n                localFiles {\n                  publicURL\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const slots =\n    data && data.allAirtable && data.allAirtable.edges\n      ? data.allAirtable.edges.flatMap(edge => edge.node.data)\n      : [];\n  return slots;\n};\n","import React from 'react';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport colors from '../../util/colors';\nimport Button from '../Button';\nimport styled from '@emotion/styled-base';\n\nconst StyledFavoriteIcon = styled(FavoriteIcon)`\n  color: ${colors.heartRed};\n`;\n\nconst StyledFavoriteText = styled('b')`\n  display: block;\n`;\n\nconst StyledFavoriteBorder = styled(FavoriteBorder)`\n  color: ${colors.grey};\n\n  &:hover,\n  &:focus {\n    color: ${colors.heartRed};\n  }\n`;\n\nconst AddFavorite = ({ title, date, startTime, setFavorites, favorites }) => {\n  const uniqueSlotIdentifier = `${date}_${startTime}_${title}`;\n  const isFavoriteActive = !!favorites.find(\n    fav => fav === uniqueSlotIdentifier,\n  );\n  const changeFavorites = () => {\n    if (isFavoriteActive) {\n      const updatedCookie = favorites.filter(\n        favorite => favorite !== uniqueSlotIdentifier,\n      );\n      setFavorites(updatedCookie);\n    } else {\n      const newFavorites = [...favorites, uniqueSlotIdentifier];\n      setFavorites(newFavorites);\n    }\n  };\n\n  return (\n    <Button appearance=\"stripped\" onClick={changeFavorites}>\n      {isFavoriteActive ? (\n        <StyledFavoriteIcon fontSize=\"large\" />\n      ) : (\n        <StyledFavoriteBorder fontSize=\"large\" />\n      )}\n      <StyledFavoriteText>\n        {isFavoriteActive ? 'Fjern' : 'Lagre'}\n      </StyledFavoriteText>\n    </Button>\n  );\n};\n\nexport default AddFavorite;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '../Button';\nimport css from '@emotion/css';\nimport colors from '../../util/colors';\nimport spacing from '../../util/spacing';\nimport styled from '@emotion/styled';\nimport mediaQueries from '../../util/mediaQueries';\nimport Close from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    margin: '0 auto',\n  },\n}));\n\nconst StyledModal = styled.div`\n  max-width: 60%;\n  width: 50%;\n  overflow-y: auto;\n  background-color: white;\n  padding: ${spacing.normal};\n  max-height: 80vh;\n  height: fit-content;\n  margin: 0 auto;\n  margin-top: ${spacing.xxlarge};\n\n  @media (${mediaQueries.medium}) {\n    max-width: 100%;\n    width: 100%;\n    margin-top: 0;\n    max-height: 100vh;\n  }\n`;\n\nconst SpeakerModal = ({ children, buttonText }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        css={css`\n          color: ${colors.blue};\n          text-decoration: underline;\n\n          &:hover,\n          &:focus {\n            color: ${colors.blueDark};\n          }\n        `}\n        appearance=\"stripped\"\n        onClick={handleOpen}>\n        {buttonText}\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <StyledModal>\n            <Button\n              css={css`\n                float: right;\n              `}\n              onClick={handleClose}\n              appearance=\"stripped\">\n              <Close />\n            </Button>\n            {children}\n          </StyledModal>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SpeakerModal;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport css from '@emotion/css';\nimport spacing from '../../util/spacing';\n\nconst StyledSpeakerFavourites = styled.div`\n  align-self: start;\n  margin: 0;\n  flex: 1;\n  margin-right: ${spacing.normal};\n\n  & > h2 {\n    margin-left: 0;\n  }\n`;\n\nconst StyledList = styled.ul`\n  margin: 0;\n`;\n\nconst favouriteCategories = [\n  'Mat',\n  'Musikksjanger',\n  'Reisemål',\n  'Film/serie',\n  'Sted',\n];\n\nconst SpeakerFavourites = ({ speaker_favourites }) => {\n  if (!speaker_favourites) {\n    return null;\n  }\n  const splittedFavourites = speaker_favourites\n    .split(';')\n    .map((favourite, index) => {\n      if (favourite.length === 0) {\n        return null;\n      }\n      return (\n        <>\n          <strong>{`${favouriteCategories[index]}: `}</strong>\n          <span>{favourite}</span>\n        </>\n      );\n    })\n    .filter(favourite => favourite);\n  return (\n    <StyledSpeakerFavourites>\n      <h2\n        css={css`\n          padding-left: 0;\n        `}>\n        Hva liker du?\n      </h2>\n      <StyledList>\n        {splittedFavourites.map((favourite, index) => (\n          <li key={`favourite_${index}`}>{favourite}</li>\n        ))}\n      </StyledList>\n    </StyledSpeakerFavourites>\n  );\n};\n\nexport default SpeakerFavourites;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Person from '@material-ui/icons/Person';\nimport mediaQueries from '../../util/mediaQueries';\nimport SpeakerFavourites from './SpeakerFavourites';\n\nconst StyledSpeakerContainer = styled.div`\n  display: grid;\n  align-content: start;\n  grid-template-rows: max-content auto auto;\n  grid-template-columns: 30% 35% 35%;\n  align-items: center;\n  grid-template-areas:\n    'image title   title '\n    'image content content';\n\n  @media (${mediaQueries.medium}) {\n    display: grid;\n    grid-template-rows: auto auto auto;\n    grid-template-columns: 100%;\n    align-items: center;\n    grid-template-areas:\n      'image'\n      'title'\n      'content';\n  }\n`;\n\nconst StyledTitle = styled.h2`\n  grid-area: title;\n  align-self: start;\n  margin-top: 0;\n`;\n\nconst StyledDescription = styled.span`\n  align-self: start;\n  flex: 0 0 100%;\n`;\n\nconst StyledSpeakerRecreation = styled.span`\n  align-self: start;\n  flex: 1;\n`;\n\nconst StyledImage = styled.img`\n  grid-area: image;\n  max-width: 75%;\n  align-self: start;\n\n  @media (${mediaQueries.medium}) {\n    max-width: 100%;\n  }\n`;\n\nconst StyledIcon = styled.span`\n  grid-area: image;\n  align-self: start;\n  & > svg {\n    font-size: 15rem;\n  }\n\n  @media (${mediaQueries.medium}) {\n    & > svg {\n      display: none;\n    }\n  }\n`;\n\nconst StyledContent = styled.div`\n  grid-area: content;\n  align-self: start;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst Speaker = ({\n  slot: {\n    userIds,\n    speaker_bio,\n    speaker_image,\n    speaker_favourites,\n    speaker_recreation,\n  },\n}) => {\n  const imageUrl =\n    speaker_image &&\n    speaker_image.localFiles &&\n    speaker_image.localFiles[0] &&\n    speaker_image.localFiles[0].publicURL;\n  return (\n    <StyledSpeakerContainer>\n      {imageUrl ? (\n        <StyledImage src={imageUrl} />\n      ) : (\n        <StyledIcon>\n          <Person fontSize=\"large\" />\n        </StyledIcon>\n      )}\n      <StyledTitle>{userIds}</StyledTitle>\n      <StyledContent>\n        <StyledDescription>\n          {speaker_bio ||\n            'Vi har dessverre ingen beskrivelse på denne personen :('}\n        </StyledDescription>\n        <SpeakerFavourites speaker_favourites={speaker_favourites} />\n        {speaker_recreation && (\n          <StyledSpeakerRecreation>\n            <h2>Hva gjør du på fritida?</h2>\n            <p>{speaker_recreation}</p>\n          </StyledSpeakerRecreation>\n        )}\n      </StyledContent>\n    </StyledSpeakerContainer>\n  );\n};\n\nexport default Speaker;\n","import SpeakerModal from './SpeakerModal';\nimport Speaker from './Speaker';\n\nexport { SpeakerModal };\n\nexport default Speaker;\n","import React from 'react';\nimport Speaker, { SpeakerModal } from '../Speaker';\n\nconst SlotSpeakers = ({ slot }) => (\n  <SpeakerModal buttonText={slot.userIds}>\n    <Speaker slot={slot} />\n  </SpeakerModal>\n);\n\nexport default SlotSpeakers;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Home from '@material-ui/icons/Home';\nimport Person from '@material-ui/icons/Person';\nimport AddFavorite from '../Favorites/AddFavorite';\nimport spacing from '../../util/spacing';\nimport Button from '../Button';\nimport {\n  StyledSlotGridWrapper,\n  StyledSlotGrid,\n  StyledTitle,\n  StyledType,\n  StyledDescription,\n  StyledSpeakers,\n  StyledFavorite,\n  StyledRoom,\n  StyledDuration,\n  StyledTime,\n  StyledUserName,\n  StyledUserLabel,\n  StyledRoomLabel,\n  StyledRoomName,\n  StyledRoomIcon,\n  StyledUserIcon,\n  StyledConnectionSlot,\n} from './SlotStyles';\nimport SlotSpeakers from './SlotSpeakers';\n\nconst maxLengthStyle = maxLength => css`\n  max-width: ${maxLength}px;\n  overflow: hidden;\n  position: relative;\n  white-space: nowrap;\n  display: inline-block;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: calc(${maxLength}px - 60px);\n    height: 100%;\n    width: 60px;\n    background: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 0) 30%,\n      rgba(255, 255, 255, 1) 100%\n    );\n  }\n`;\n\nconst expandMoreStyle = rotation => css`\n  transform: rotate(${rotation}deg);\n  transition: transform 1s ease-in-out;\n`;\n\nconst ShowButton = ({ showDescription, setShowDescription }) => (\n  <Button\n    appearance=\"stripped\"\n    onClick={() => setShowDescription(!showDescription)}>\n    <ExpandMore\n      css={showDescription ? expandMoreStyle(180) : expandMoreStyle(0)}\n    />\n  </Button>\n);\n\nShowButton.propTypes = {\n  showDescription: PropTypes.bool.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n};\n\nconst Slot = ({ slot, date, favorites, setFavorites, viewType }) => {\n  const descriptionRef = React.createRef();\n\n  const [maxLength, setMaxLength] = useState(undefined);\n  const [showDescription, setShowDescription] = useState(false);\n  /*useEffect(() => {\n    setTimeout(() => {\n      if (descriptionRef && descriptionRef.current) {\n        const getBoundingClientRectData = descriptionRef.current.getBoundingClientRect();\n        if (getBoundingClientRectData.height > 30) {\n          setMaxLength(\n            getBoundingClientRectData.width - spacing.spacingUnit * 3,\n          );\n        }\n      }\n    }, 600);\n  }, [viewType]);*/\n\n  return (\n    <StyledSlotGridWrapper viewType={viewType}>\n      <StyledType type={slot.type} viewType={viewType} />\n      <StyledSlotGrid\n        type={slot.type}\n        viewType={viewType}\n        rowGap={!slot.description && !slot.room && '0'}>\n        <StyledTitle>\n          <b>{slot.title}</b>\n        </StyledTitle>\n        <StyledTime>\n          <b>{`${slot.start} ${slot.end ? '-' : ''} ${slot.end || ''}`}</b>\n        </StyledTime>\n        {slot.duration && (\n          <StyledDuration>\n            {slot.duration ? `${slot.duration} minutter` : 'Ikke oppgitt'}\n          </StyledDuration>\n        )}\n        {slot.description && (\n          <StyledDescription ref={descriptionRef}>\n            <div\n              css={\n                maxLength && !showDescription\n                  ? maxLengthStyle(maxLength)\n                  : css`\n                      display: inline-block;\n                    `\n              }>\n              {slot.description}\n              {maxLength && showDescription && (\n                <ShowButton\n                  showDescription={showDescription}\n                  setShowDescription={setShowDescription}\n                />\n              )}\n            </div>\n            {maxLength && !showDescription && (\n              <ShowButton\n                showDescription={showDescription}\n                setShowDescription={setShowDescription}\n              />\n            )}\n          </StyledDescription>\n        )}\n        <StyledFavorite>\n          <AddFavorite\n            title={slot.title}\n            startTime={slot.start || slot.time}\n            setFavorites={setFavorites}\n            favorites={favorites}\n            date={slot.date}\n          />\n        </StyledFavorite>\n        {slot.userIds && (\n          <StyledSpeakers viewType={viewType}>\n            <StyledUserIcon>\n              <Person fontSize=\"small\" />\n            </StyledUserIcon>\n            <StyledUserLabel>Foredragsholdere</StyledUserLabel>\n            <StyledUserName>\n              <SlotSpeakers slot={slot} />\n            </StyledUserName>\n          </StyledSpeakers>\n        )}\n        {slot.room && (\n          <StyledRoom viewType={viewType}>\n            <StyledRoomIcon>\n              <Home fontSize=\"small\" />\n            </StyledRoomIcon>\n            <StyledRoomLabel>Rom:</StyledRoomLabel>\n            <StyledRoomName>{slot.room}</StyledRoomName>\n          </StyledRoom>\n        )}\n      </StyledSlotGrid>\n    </StyledSlotGridWrapper>\n  );\n};\n\nSlot.propTypes = {\n  slot: PropTypes.object,\n  viewType: PropTypes.string,\n};\n\nexport default Slot;\n","import Slot from './Slot';\n\nexport default Slot;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport groupBy from 'lodash/groupBy';\nimport styled from '@emotion/styled';\nimport Slot from '.';\nimport { getCookie, setCookie } from '../../util/cookieHelper';\nimport viewmodel from '../../json';\nimport css from '@emotion/css';\nimport mediaQueries from '../../util/mediaQueries';\n\nconst getColumnStyle = viewType => {\n  if (viewType === 'column') {\n    return css`\n      align-items: baseline;\n      flex-wrap: wrap;\n\n      & > * {\n        flex: 1 28%;\n        width: 28%;\n      }\n\n      @media (${mediaQueries.medium}) {\n        flex-direction: column;\n        & > * {\n          flex: 1 100%;\n          width: 100%;\n        }\n      }\n    `;\n  }\n  return '';\n};\n\nconst StyledSlots = styled.div`\n  display: flex;\n  flex-direction: ${p => (p.viewType === 'row' ? 'column' : 'row')};\n  ${p => getColumnStyle(p.viewType)};\n`;\n\nconst Slots = ({\n  slots,\n  removeFavorite,\n  noGroupBy,\n  viewType,\n  isFavourites,\n}) => {\n  const [favorites, setFavorites] = useState([]);\n\n  const updateFavorites = newFavorites => {\n    setCookie('favorites', JSON.stringify(newFavorites));\n    setFavorites(newFavorites);\n    removeFavorite && removeFavorite(newFavorites);\n  };\n\n  useEffect(() => {\n    const favoritesCookies = getCookie('favorites', document.cookie);\n    const currentCookie = favoritesCookies ? JSON.parse(favoritesCookies) : [];\n    setFavorites(currentCookie);\n  }, []);\n\n  if (noGroupBy) {\n    return (\n      <StyledSlots viewType={viewType}>\n        {slots.map(slot => (\n          <Slot\n            key={`${slot.title}_${slot.room}`}\n            slot={slot}\n            setFavorites={updateFavorites}\n            favorites={favorites}\n            viewType={viewType}\n          />\n        ))}\n      </StyledSlots>\n    );\n  }\n\n  if (isFavourites) {\n    const groupedByDate = groupBy(slots, slot => slot.date);\n    return Object.keys(groupedByDate)\n      .sort()\n      .map(startKey => (\n        <div key={startKey}>\n          <h3>{viewmodel.days.find(day => day.date === startKey).label}</h3>\n          <StyledSlots viewType={viewType}>\n            {groupedByDate[startKey]\n              .sort((a, b) => (a.start > b.start ? 1 : -1))\n              .map(slot => (\n                <Slot\n                  key={`${slot.title}_${slot.room}`}\n                  slot={slot}\n                  setFavorites={updateFavorites}\n                  favorites={favorites}\n                  viewType={viewType}\n                />\n              ))}\n          </StyledSlots>\n        </div>\n      ));\n  }\n\n  const groupedByStart = groupBy(slots, slot => slot.start);\n  return Object.keys(groupedByStart)\n    .sort()\n    .map(startKey => (\n      <div key={startKey}>\n        <h3>{startKey}</h3>\n        <StyledSlots viewType={viewType}>\n          {groupedByStart[startKey].map(slot => (\n            <Slot\n              key={`${slot.title}_${slot.room}`}\n              slot={slot}\n              setFavorites={updateFavorites}\n              favorites={favorites}\n              viewType={viewType}\n            />\n          ))}\n        </StyledSlots>\n      </div>\n    ));\n};\n\nSlots.propTypes = {\n  slots: PropTypes.arrayOf(PropTypes.object),\n  removeFavorite: PropTypes.func,\n  noGroupBy: PropTypes.bool,\n  isFavourites: PropTypes.bool,\n  viewType: PropTypes.string,\n};\n\nSlots.defaultProps = {\n  noGroupBy: false,\n  viewType: 'row',\n};\n\nexport default Slots;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport viewmodel from '../json';\nimport { oldColors as colors } from '../util/colors';\nimport mediaQueries from '../util/mediaQueries';\n\nconst StyledGoogleMapsWrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst StyledGoogleMapsBlocker = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`;\n\nconst StyleGoogleMapsContent = styled.div`\n  width: 350px;\n  height: 200px;\n  padding: 20px;\n  top: 0.5rem;\n  left: 0.5rem;\n  position: absolute;\n  text-align: left;\n  background: white;\n  border: 1px solid ${colors.grey};\n\n  @media (${mediaQueries.medium}) {\n    width: 60%;\n    height: 240px;\n  }\n`;\n\nconst StyledGoogleMaps = styled.iframe`\n  height: 100vh;\n  width: 100%;\n  border: none;\n`;\n\nconst GoogleMaps = () => {\n  return (\n    <StyledGoogleMapsWrapper>\n      <StyledGoogleMapsBlocker />\n      <StyleGoogleMapsContent>\n        <h1>Lokasjon</h1>\n        <a\n          href=\"https://www.hotel-grandior.cz/en/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <h3>{viewmodel.event.venue}</h3>\n        </a>\n        <a\n          href=\"https://goo.gl/maps/516zDATUr5TWHUNf9\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <h3>{viewmodel.event.adress}</h3>\n        </a>\n        <h3>{viewmodel.event.city}</h3>\n      </StyleGoogleMapsContent>\n      <StyledGoogleMaps src={viewmodel.event.gmapsUrl} frameBorder=\"0\" />\n    </StyledGoogleMapsWrapper>\n  );\n};\n\nexport default GoogleMaps;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport SafeLink from '../components/SafeLink';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\n\nconst StyledNavigationContainer = styled.div`\n  width: 100%;\n  text-align: center;\n  position: fixed;\n  z-index: 3;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  border-bottom: 3px solid ${colors.blueDarkest};\n  background-color: ${colors.blueDark};\n`;\n\nconst StyledNavigation = styled.div`\n  color: white;\n  justify-content: center;\n  display: grid;\n  grid-column-gap: ${spacing.normal};\n  grid-template-columns: repeat(3, ${spacing.spacingUnit * 6}px [col-start]);\n`;\n\nconst StyledPushElement = styled.div`\n  height: ${spacing.small};\n  padding: ${spacing.small} 0;\n`;\n\nconst routes = [\n  { to: '/', title: 'Praha 2019' },\n  { to: '/schedule', title: 'Program' },\n  { to: '/favorites', title: 'Favoritter' },\n];\n\nconst StyledSafeLink = styled(SafeLink)`\n  justify-self: center;\n  padding: ${spacing.small} 0;\n`;\n\nconst Navigation = () => {\n  return (\n    <>\n      <StyledNavigationContainer>\n        <StyledNavigation>\n          {routes.map(route => (\n            <StyledSafeLink\n              key={route.to}\n              to={route.to}\n              activeStyle={{\n                borderBottom: `3px solid ${colors.blue}`,\n                marginBottom: '-3px',\n              }}>\n              {route.title}\n            </StyledSafeLink>\n          ))}\n        </StyledNavigation>\n      </StyledNavigationContainer>\n      <StyledPushElement />\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport viewmodel from '../json';\nimport GoogleMaps from './GoogleMaps';\nimport Navigation from './Navigation';\n\nconst DefaultLayout = ({ children, showGoogleMaps }) => {\n  return (\n    <div>\n      <Helmet\n        title={viewmodel.meta.title}\n        meta={[\n          {\n            name: 'description',\n            content: viewmodel.meta.description,\n          },\n          { name: 'keywords', content: viewmodel.meta.description },\n        ]}>\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Raleway&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n      <Navigation />\n      {children}\n      {showGoogleMaps && <GoogleMaps />}\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst StyledSvg = styled.svg`\n  display: block;\n  margin-bottom: -1px;\n  margin-top: -1px;\n`;\n\nconst SectionSeparator = ({\n  position,\n  previousSectionColor,\n  nextSectionColor,\n  ...rest\n}) => {\n  if (position === 'bottom') {\n    return (\n      <StyledSvg\n        {...rest}\n        viewBox=\"0 0 1024 76\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(0.000000, -1005.000000)\">\n            <g transform=\"translate(512.000000, 1043.000000) rotate(-180.000000) translate(-512.000000, -1043.000000) translate(0.000000, 1005.000000)\">\n              <polygon\n                fill=\"#33C6FC\"\n                transform=\"translate(512.000000, 41.000000) scale(1, -1) translate(-512.000000, -41.000000) \"\n                points=\"-1.13686838e-13 6 -1.25055521e-12 76 1024 76 1024 59\"\n              />\n              <polygon\n                fill=\"#3277F8\"\n                points=\"-1.13686838e-13 2 0 50 1024 49.5 1024 2\"\n              />\n              <polygon\n                fill=\"#28334A\"\n                points=\"0 0 1.02318154e-12 14.3333333 1024 59.5 1024 0\"\n              />\n            </g>\n          </g>\n        </g>\n      </StyledSvg>\n    );\n  }\n  return (\n    <StyledSvg\n      {...rest}\n      viewBox=\"0 0 1024 84\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(0.000000, -465.000000)\">\n          <g transform=\"translate(0.000000, 465.000000)\">\n            <polygon\n              fill=\"#33C6FC\"\n              transform=\"translate(512.000000, 44.416667) scale(1, -1) translate(-512.000000, -44.416667) \"\n              points=\"-2.40172465e-15 5.33333333 0 83.5 1024 83.5 1024 65.8333333\"\n            />\n            <polygon fill=\"#3277F8\" points=\"0 2 0 49.5 1024 49.5 1024 2\" />\n            <polygon\n              fill={previousSectionColor || '#28334A'}\n              points=\"0 0 0 5.33333333 1024 59.5 1024 0\"\n            />\n          </g>\n        </g>\n      </g>\n    </StyledSvg>\n  );\n};\n\nSectionSeparator.propTypes = {\n  position: PropTypes.string,\n  previousSectionColor: PropTypes.string,\n  nextSectionColor: PropTypes.string,\n};\n\nSectionSeparator.defaultProps = {\n  position: 'top',\n};\n\nexport default SectionSeparator;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Seperator from './Seperator';\nimport styled from '@emotion/styled';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\nimport mediaQueries from '../util/mediaQueries';\n\nconst StyledSection = styled.div`\n  background-color: ${p => p.backgroundColor || colors.blueLighest};\n  min-height: ${p => p.minHeight || '50vh'};\n  color: ${p => p.color || colors.blueDark};\n`;\nconst StyledInnerSection = styled.div`\n  padding: 1rem 15%;\n  min-height: ${p => p.minHeight || '50vh'};\n  @media (${mediaQueries.xxlarge}) {\n    padding: 0 20%;\n  }\n\n  @media (${mediaQueries.medium}) {\n    padding: 0 ${spacing.large};\n  }\n`;\n\nconst ContentSection = ({\n  withTopSeperator,\n  withBottomSeperator,\n  previousSectionColor,\n  nextSectionColor,\n  minHeight,\n  children,\n  ...rest\n}) => {\n  return (\n    <Fragment>\n      <StyledSection minHeight={minHeight} {...rest}>\n        {withTopSeperator && (\n          <Seperator\n            previousSectionColor={previousSectionColor}\n            nextSectionColor={nextSectionColor}\n            position=\"top\"\n          />\n        )}\n        <StyledInnerSection minHeight={minHeight}>\n          {children}\n        </StyledInnerSection>\n        {withBottomSeperator && (\n          <Seperator\n            previousSectionColor={previousSectionColor}\n            nextSectionColor={nextSectionColor}\n            position=\"bottom\"\n          />\n        )}\n      </StyledSection>\n    </Fragment>\n  );\n};\n\nContentSection.defaultProps = {\n  withTopSeperator: false,\n  withBottomSeperator: false,\n};\n\nContentSection.propTypes = {\n  withBottomSeperator: PropTypes.bool,\n  withTopSeperator: PropTypes.bool,\n  previousSectionColor: PropTypes.string,\n  nextSectionColor: PropTypes.string,\n  minHeight: PropTypes.string,\n};\n\nexport default ContentSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\nimport { css } from '@emotion/core';\nimport { oldColors } from '../util/colors';\n\nconst linkStyle = (hoverColor = oldColors.primary) => css`\n  background-color: transparent;\n  text-decoration: none;\n  color: white;\n\n  &:hover,\n  &:focus {\n    color: white;\n  }\n`;\n\nconst SafeLink = ({ to, children, hoverColor, ...rest }) => {\n  if (to) {\n    return (\n      <Link to={to} css={linkStyle(hoverColor)} {...rest}>\n        {children}\n      </Link>\n    );\n  }\n  return (\n    <a css={linkStyle} {...rest}>\n      {children}\n    </a>\n  );\n};\n\nSafeLink.propTypes = {\n  to: PropTypes.string,\n  hoverColor: PropTypes.string,\n};\n\nexport default SafeLink;\n","export const setCookie = (name, value, removeCookie) => {\n  let expires;\n  if (removeCookie) {\n    expires = 'Thu, 01 Jan 1970 00:00:01 GMT';\n  } else {\n    const d = new Date();\n    d.setTime(d.getTime() + 9999 * 24 * 60 * 60 * 1000);\n    expires = `expires=${d.toUTCString()}`;\n  }\n  document.cookie = `${name}=${encodeURIComponent(value)}; ${expires}; path=/`;\n};\n\nexport const getCookie = (name, cookies) => {\n  const value = `; ${decodeURIComponent(cookies)}`;\n  const cookieParts = value.split(`; ${name}=`);\n  if (cookieParts.length > 1) {\n    return cookieParts\n      .pop()\n      .split(';')\n      .shift();\n  }\n  return null;\n};\n\nexport const isValidCookie = (name, cookies) =>\n  getCookie(name, cookies) !== null;\n\nexport const deleteCookie = name => {\n  setCookie(name, '', true);\n};\n","import styled from '@emotion/styled';\nimport css from '@emotion/css';\nimport colors from '../../util/colors';\nimport mediaQueries from '../../util/mediaQueries';\nimport spacing from '../../util/spacing';\n\nexport const typeColors = {\n  other: colors.blueDark,\n  talk: colors.green,\n  keynote: colors.blue,\n};\n\nconst gridTemplates = {\n  talk: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% 80% 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  keynote: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% 80% 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  other: {\n    desktop: css`\n      grid-template-rows: auto auto auto;\n      grid-template-columns: 10% 80% 10%;\n      align-items: center;\n      grid-template-areas:\n        'time title favorite'\n        'time    title       favorite'\n        '.       description description'\n        '.       room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        '.           favorite'\n        'title       title'\n        'description description'\n        'room        room';\n    `,\n  },\n};\n\nconst responsiveStyles = {\n  type: {\n    desktop: css`\n      border-top-left-radius: 5px;\n      border-bottom-left-radius: 5px;\n    `,\n    mobile: css`\n      border-bottom-left-radius: 0;\n      border-top-right-radius: 5px;\n      border-top-left-radius: 5px;\n    `,\n  },\n  room: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 30px 190px auto;\n      grid-template-areas: 'roomIcon roomLabel roomName';\n    `,\n    mobile: css`\n      grid-template-rows: 30px auto;\n      grid-template-columns: 30px auto;\n      grid-template-areas:\n        'roomIcon roomLabel'\n        'roomIcon roomName';\n    `,\n  },\n  speakers: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 30px 190px auto;\n      grid-template-areas: 'speakerIcon speakerLabel speakerName';\n    `,\n    mobile: css`\n      grid-template-rows: 30px auto;\n      grid-template-columns: 30px auto;\n      grid-template-areas:\n        'speakerIcon speakerLabel'\n        'speakerIcon speakerName';\n    `,\n  },\n};\n\nconst getViewTypeForDesktop = viewType =>\n  viewType === 'row' ? 'desktop' : 'mobile';\n\nconst getStyledSlotGridWrapperStyle = (viewType, isMobile = false) => {\n  if (viewType === 'column' || isMobile) {\n    return css`\n      margin: ${spacing.small} 0;\n      margin-right: ${viewType === 'column' && !isMobile && spacing.normal};\n      grid-template-rows: ${spacing.small} auto;\n      grid-template-columns: 100%;\n      grid-template-areas:\n        'type'\n        'allContent';\n    `;\n  }\n  return css`\n    margin-top: ${spacing.large};\n    grid-template-rows: auto;\n    grid-template-columns: ${spacing.small} auto;\n    grid-template-areas: 'type allContent';\n\n    &:last-child {\n      margin-bottom: ${spacing.large};\n    }\n  `;\n};\nexport const StyledSlotGridWrapper = styled.div`\n  display: grid;\n  background-color: white;\n  border-radius: 5px;\n  ${p => getStyledSlotGridWrapperStyle(p.viewType, false)};\n\n  @media (${mediaQueries.medium}) {\n    ${p => getStyledSlotGridWrapperStyle(p.viewType, true)};\n  }\n`;\n\nconst getSlotGridStyle = (type, viewType, isMobile = false) => {\n  const desktopOrMobile =\n    viewType === 'column' || isMobile ? 'mobile' : 'desktop';\n  if (type) {\n    return gridTemplates[type][desktopOrMobile];\n  }\n  return gridTemplates.other[desktopOrMobile];\n};\n\nexport const StyledSlotGrid = styled.div`\n  display: grid;\n  grid-area: allContent;\n  padding: ${spacing.normal};\n  grid-row-gap: ${p => p.rowGap || spacing.small};\n  ${p => getSlotGridStyle(p.type, p.viewType, false)};\n  & b {\n    font-weight: 900;\n  }\n\n  @media (${mediaQueries.medium}) {\n    ${p => getSlotGridStyle(p.type, p.viewType, true)};\n  }\n`;\n\nexport const StyledType = styled.div`\n  grid-area: type;\n  background-color: ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  border: 1px solid ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  ${p => responsiveStyles.type[getViewTypeForDesktop(p.viewType)]}\n  \n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.type.mobile}\n\n  }\n`;\n\nexport const StyledTime = styled.div`\n  grid-area: time;\n`;\n\nexport const StyledTitle = styled.div`\n  grid-area: title;\n`;\n\nexport const StyledFavorite = styled.div`\n  grid-area: favorite;\n  justify-self: right;\n`;\n\nexport const StyledDuration = styled.div`\n  grid-area: duration;\n`;\n\nexport const StyledRoom = styled.div`\n  grid-area: room;\n  display: grid;\n  ${p => responsiveStyles.room[getViewTypeForDesktop(p.viewType)]}\n\n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.room.mobile}\n  }\n`;\n\nexport const StyledRoomLabel = styled.div`\n  grid-area: roomLabel;\n  display: flex;\n\n  & > svg {\n    padding-right: ${spacing.small};\n    color: ${colors.grey};\n  }\n`;\n\nexport const StyledRoomIcon = styled.div`\n  grid-area: roomIcon;\n`;\nexport const StyledRoomName = styled.b`\n  grid-area: roomName;\n`;\n\nexport const StyledDescription = styled.div`\n  grid-area: description;\n  display: flex;\n`;\n\nexport const StyledSpeakers = styled.div`\n  grid-area: speakers;\n  display: grid;\n  grid-auto-rows: min-content;\n  ${p => responsiveStyles.speakers[getViewTypeForDesktop(p.viewType)]}\n\n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.speakers.mobile}\n  }\n`;\n\nexport const StyledUserIcon = styled.div`\n  grid-area: speakerIcon;\n`;\n\nexport const StyledUserLabel = styled.div`\n  grid-area: speakerLabel;\n  display: flex;\n  & > svg {\n    padding-right: ${spacing.small};\n    color: ${colors.grey};\n  }\n`;\n\nexport const StyledUserName = styled.b`\n  grid-area: speakerName;\n  & button {\n    text-align: left;\n  }\n`;\n"],"sourceRoot":""}