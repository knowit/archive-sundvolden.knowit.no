{"version":3,"sources":["webpack:///./src/components/ButtonGroup.js","webpack:///./src/pages/schedule.js"],"names":["StyledButtonGroup","Object","styled_base_browser_esm","target","p","numberOfButtons","overflow","ButtonGroup","_ref","children","rest","objectWithoutPropertiesLoose_default","core_browser_esm","propTypes","css","PropTypes","string","number","isRequired","isActiveStyle","colors","blueDarkest","StyledLinkContainer","mediaQueries","medium","StyledLink","spacing","small","normal","blue","isActive","expandMoreStyle","xsmall","SchedulePage","_this","_React$Component","call","this","onDayClick","bind","assertThisInitialized_default","onSelectChange","state","activeIndex","evt","preventDefault","setState","window","location","hash","scheduleDay","viewmodel","schedules","value","date","render","props","StyledSafeLink","withComponent","SafeLink","activeDay","find","substring","days","console","log","layouts","Content","ContentSection","minHeight","backgroundColor","blueDark","color","components_ButtonGroup","length","large","map","day","id","key","label","to","ExpandMore_default","a","fontSize","withTopSeperator","withBottomSeperator","Slots","slots","filter","slot","React","Component"],"mappings":"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","file":"component---src-pages-schedule-js-37cc7eab47ca45089b2c.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst StyledButtonGroup = styled.div`\n  display: grid;\n  grid-template-columns: ${p =>\n    `repeat(${p.numberOfButtons}, auto [col-start])`};\n  grid-column-gap: 10px;\n  ${p => (p.overflow ? `overflow: ${p.overflow}` : '')};\n`;\n\nconst ButtonGroup = ({ children, ...rest }) => {\n  return <StyledButtonGroup {...rest}>{children}</StyledButtonGroup>;\n};\n\nButtonGroup.propTypes = {\n  css: PropTypes.string,\n  numberOfButtons: PropTypes.number.isRequired,\n};\n\nexport default ButtonGroup;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport viewmodel from '../json';\nimport ButtonGroup from '../components/ButtonGroup';\nimport Content from '../components/Content';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\nimport mediaQueries from '../util/mediaQueries';\nimport SafeLink from '../components/SafeLink';\nimport DefaultLayout from '../layouts';\nimport ContentSection from '../components/ContentSection';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Slots from '../components/Slot/Slots';\n\nconst buttonGroupStyle = numberOfButtons => css`\n  margin: ${spacing.large} auto;\n\n  @media (${mediaQueries.medium}) {\n    grid-template-columns: 100%;\n    grid-template-rows: repeat(${numberOfButtons}, auto [col-start]);\n    grid-row-gap: 10px;\n  }\n`;\n\nconst isActiveStyle = css`\n  color: white;\n  background-color: ${colors.blueDarkest};\n  border-color: ${colors.blueDarkest};\n`;\n\nconst StyledLinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  white-space: nowrap;\n  @media (${mediaQueries.medium}) {\n    display: grid;\n    grid-template-columns: 90% 10%;\n    grid-template-rows: auto;\n    grid-template-areas: 'button arrow';\n  }\n`;\n\nconst StyledLink = styled.a`\n  padding: ${spacing.small} ${spacing.normal};\n  background-color: ${colors.blue};\n  text-decoration: none;\n  color: white;\n  border: 1px solid ${colors.blue};\n  border-radius: 50px;\n  text-align: center;\n  display: ${p => p.isActive && isActiveStyle};\n  &:hover,\n  &:focus {\n    ${isActiveStyle};\n  }\n  @media (${mediaQueries.medium}) {\n    grid-area: button;\n  }\n`;\n\nconst expandMoreStyle = css`\n  margin-top: ${spacing.xsmall};\n  color: ${colors.blue};\n  @media (${mediaQueries.medium}) {\n    grid-area: arrow;\n  }\n`;\n\nclass SchedulePage extends React.Component {\n  constructor() {\n    super();\n    this.onDayClick = this.onDayClick.bind(this);\n    this.onSelectChange = this.onSelectChange.bind(this);\n    this.state = {\n      activeIndex: 0,\n    };\n  }\n\n  onDayClick(evt, activeIndex) {\n    evt.preventDefault();\n    this.setState({ activeIndex }, () => {\n      window.location.hash = `#${activeIndex}`;\n    });\n  }\n\n  onSelectChange(evt) {\n    const scheduleDay = viewmodel.schedules[evt.target.value];\n    window.location.hash = `#${\n      viewmodel.schedules[evt.target.value]\n        ? scheduleDay.date\n        : viewmodel.schedules[0].date\n    }`;\n  }\n\n  render() {\n    const { location } = this.props;\n    const StyledSafeLink = StyledLink.withComponent(SafeLink);\n    const dayInUrl = viewmodel.schedules.find(\n      scheduleDay => scheduleDay.date === location.hash.substring(1),\n    );\n    const activeDay = dayInUrl || viewmodel.days[0];\n    console.log(activeDay);\n    if (!activeDay || !activeDay.date) {\n      return <span>Her skjedde noe feil gitt...</span>;\n    }\n    return (\n      <DefaultLayout>\n        <Content>\n          <ContentSection\n            minHeight=\"10vh\"\n            backgroundColor={colors.blueDark}\n            color=\"white\">\n            <ButtonGroup\n              css={buttonGroupStyle(viewmodel.days.length)}\n              numberOfButtons={viewmodel.days.length}>\n              {viewmodel.days.map(day => (\n                <StyledLinkContainer id={day.date} key={day.label}>\n                  <StyledSafeLink\n                    isActive={activeDay.date === day.date}\n                    to={`/schedule#${day.date}`}>\n                    {day.label}\n                  </StyledSafeLink>\n                  {activeDay.date === day.date && (\n                    <ExpandMore css={expandMoreStyle} fontSize=\"large\" />\n                  )}\n                </StyledLinkContainer>\n              ))}\n            </ButtonGroup>\n          </ContentSection>\n          <ContentSection withTopSeperator withBottomSeperator>\n            <Slots\n              slots={viewmodel.schedules.filter(\n                slot => slot.date === activeDay.date,\n              )}\n            />\n          </ContentSection>\n        </Content>\n      </DefaultLayout>\n    );\n  }\n}\n\nexport default SchedulePage;\n"],"sourceRoot":""}