{"version":3,"sources":["webpack:///./src/components/Slot/SlotStyles.js","webpack:///./src/components/Slot/EntriesSlot.js","webpack:///./src/components/Slot/OtherSlot.js","webpack:///./src/components/Slot/Slot.js","webpack:///./src/components/Slot/index.js","webpack:///./src/pages/schedule.js","webpack:///./src/components/Button.jsx","webpack:///./src/components/ButtonGroup.js","webpack:///./node_modules/@material-ui/icons/ExpandMore.js"],"names":["StyledSlot","Object","styled_base_browser_esm","target","spacing","large","mediaQueries","medium","StyledSlotTime","StyledSlotContent","typeColors","other","colors","green","talk","blueDarkest","workshop","blue","StyledSlotType","p","type","small","StyledSlotTimeContainer","normal","StyledSlotDuration","grey","StyledSlotTitle","StyledSlotDescription","name","styles","maxLengthStyle","maxLength","css","expandMoreStyle","rotation","EntriesSlot","_ref","collection","descriptionRef","React","createRef","_useState","useState","undefined","setMaxLength","_useState2","showDescription","setShowDescription","useEffect","getBoundingClientRectData","current","getBoundingClientRect","height","width","spacingUnit","description","console","log","core_browser_esm","start","end","title","ref","Button","appearance","onClick","ExpandMore_default","a","propTypes","PropTypes","object","OtherSlot","time","Slot","Slot_EntriesSlot","Slot_OtherSlot","buttonGroupStyle","isActiveStyle","StyledLinkContainer","StyledLink","isActive","StyledSelect","xsmall","SchedulePage","_this","_React$Component","call","this","onDayClick","bind","assertThisInitialized_default","onSelectChange","state","activeIndex","evt","preventDefault","setState","window","location","hash","value","render","_this2","props","StyledSafeLink","withComponent","SafeLink","activeDay","viewmodel","schedules","find","scheduleDay","date","substring","day","layouts","Content","ContentSection","minHeight","backgroundColor","blueDark","color","ButtonGroup","numberOfButtons","length","map","index","key","to","fontSize","onChange","withTopSeperator","withBottomSeperator","collections","components_Slot","Component","hoverStyle","darken","strippedStyle","appearances","stripped","outline","active","StyledButton","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","children","rest","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","string","arrowBottom","bool","StyledButtonGroup","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","number","isRequired","_interopRequireDefault","__webpack_require__","defineProperty","exports","default","_react","_default","createElement","Fragment","d","fill"],"mappings":"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","file":"component---src-pages-schedule-js-4ff8d1e5ba2385b978db.js","sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../../util/colors';\nimport mediaQueries from '../../util/mediaQueries';\nimport spacing from '../../util/spacing';\n\nconst StyledSlot = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  background-color: white;\n  flex-flow: row;\n  border-radius: 5px;\n\n  &:last-child {\n    margin-bottom: ${spacing.large};\n  }\n\n  @media (${mediaQueries.medium}) {\n    flex-flow: column;\n  }\n`;\n\nconst StyledSlotTime = styled.span`\n  align-self: center;\n  @media (${mediaQueries.medium}) {\n    align-self: center;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst StyledSlotContent = styled.div`\n  padding: 1rem 0;\n  width: 90%;\n  @media (${mediaQueries.medium}) {\n    padding: 1rem 0;\n    font-weight: bold;\n    width: 100%;\n  }\n`;\n\nconst typeColors = {\n  other: colors.green,\n  talk: colors.blueDarkest,\n  workshop: colors.blue,\n};\n\nconst StyledSlotType = styled.div`\n  background-color: ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  width: ${spacing.small};\n  border: 1px solid ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n`;\n\nconst StyledSlotTimeContainer = styled.span`\n  width: 10%;\n  margin-left: ${spacing.normal};\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  margin-right: ${spacing.normal};\n`;\n\nconst StyledSlotDuration = styled.span`\n  margin-top: ${spacing.small};\n  color: ${colors.grey};\n`;\n\nconst StyledSlotTitle = styled.strong`\n  display: inline-block;\n  padding: ${spacing.normal} 0;\n`;\n\nconst StyledSlotDescription = styled.span`\n  display: inline-block;\n`;\n\nexport {\n  StyledSlot,\n  StyledSlotTitle,\n  StyledSlotDescription,\n  StyledSlotTime,\n  StyledSlotContent,\n  StyledSlotType,\n  StyledSlotDuration,\n  StyledSlotTimeContainer,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\n\nimport {\n  StyledSlot,\n  StyledSlotTime,\n  StyledSlotContent,\n  StyledSlotType,\n  StyledSlotTitle,\n  StyledSlotTimeContainer,\n  StyledSlotDuration,\n  StyledSlotDescription,\n} from './SlotStyles';\nimport spacing from '../../util/spacing';\nimport Button from '../Button';\n\nconst maxLengthStyle = maxLength => css`\n  max-width: ${maxLength}px;\n  overflow: hidden;\n  position: relative;\n  white-space: nowrap;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: calc(${maxLength}px - 60px);\n    height: 100%;\n    width: 60px;\n    background: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 0) 30%,\n      rgba(255, 255, 255, 1) 100%\n    );\n  }\n`;\n\nconst expandMoreStyle = rotation => css`\n  transform: rotate(${rotation}deg);\n  transition: transform 1s ease-in-out;\n`;\n\nconst EntriesSlot = ({ collection }) => {\n  const descriptionRef = React.createRef();\n  const [maxLength, setMaxLength] = useState(undefined);\n  const [showDescription, setShowDescription] = useState(false);\n\n  useEffect(\n    () => {\n      const getBoundingClientRectData = descriptionRef.current.getBoundingClientRect();\n      if (getBoundingClientRectData.height > 25) {\n        setMaxLength(getBoundingClientRectData.width - spacing.spacingUnit * 3);\n      }\n    },\n    [collection.description],\n  );\n  console.log(maxLength);\n  return (\n    <StyledSlot>\n      <StyledSlotType type=\"talk\" />\n      <StyledSlotTimeContainer>\n        <StyledSlotTime>{`${collection.start} - ${\n          collection.end\n        }`}</StyledSlotTime>\n        <StyledSlotDuration>60 min</StyledSlotDuration>\n      </StyledSlotTimeContainer>\n      <StyledSlotContent>\n        <StyledSlotTitle>{collection.title}</StyledSlotTitle>\n        <StyledSlotDescription\n          ref={descriptionRef}\n          css={maxLength && !showDescription && maxLengthStyle(maxLength)}>\n          {collection.description}\n        </StyledSlotDescription>\n        <Button\n          appearance=\"stripped\"\n          onClick={() => setShowDescription(!showDescription)}>\n          <ExpandMore\n            css={showDescription ? expandMoreStyle(180) : expandMoreStyle(0)}\n          />\n        </Button>\n      </StyledSlotContent>\n    </StyledSlot>\n  );\n};\n\nEntriesSlot.propTypes = {\n  collection: PropTypes.object,\n};\n\nexport default EntriesSlot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledSlot,\n  StyledSlotTime,\n  StyledSlotTitle,\n  StyledSlotContent,\n  StyledSlotType,\n  StyledSlotTimeContainer,\n} from './SlotStyles';\n\nconst OtherSlot = ({ collection }) => (\n  <StyledSlot>\n    <StyledSlotType type=\"other\" />\n    <StyledSlotTimeContainer>\n      <StyledSlotTime>{collection.time}</StyledSlotTime>\n    </StyledSlotTimeContainer>\n    <StyledSlotContent>\n      <StyledSlotTitle>{collection.title}</StyledSlotTitle>\n    </StyledSlotContent>\n  </StyledSlot>\n);\n\nOtherSlot.propTypes = {\n  collection: PropTypes.object,\n};\n\nexport default OtherSlot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesSlot from './EntriesSlot';\nimport OtherSlot from './OtherSlot';\n\nconst Slot = ({ collection }) => {\n  if (!collection) {\n    return null;\n  } else if (collection.type === 'talk') {\n    return <EntriesSlot collection={collection} />;\n  }\n  return <OtherSlot collection={collection} />;\n};\n\nSlot.propTypes = {\n  collection: PropTypes.object,\n};\n\nexport default Slot;\n","import Slot from './Slot';\n\nexport default Slot;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport viewmodel from '../json';\nimport ButtonGroup from '../components/ButtonGroup';\nimport Button from '../components/Button';\nimport Slot from '../components/Slot';\nimport Content from '../components/Content';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\nimport mediaQueries from '../util/mediaQueries';\nimport SafeLink from '../components/SafeLink';\nimport DefaultLayout from '../layouts';\nimport ContentSection from '../components/ContentSection';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nconst buttonGroupStyle = css`\n  margin: ${spacing.large} auto;\n`;\n\nconst isActiveStyle = css`\n  color: white;\n  background-color: ${colors.blueDarkest};\n  border-color: ${colors.blueDarkest};\n`;\n\nconst StyledLinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledLink = styled.a`\n  padding: ${spacing.small} ${spacing.normal};\n  background-color: ${colors.blue};\n  text-decoration: none;\n  color: white;\n  border: 1px solid ${colors.blue};\n  border-radius: 50px;\n  text-align: center;\n  ${p => p.isActive && isActiveStyle};\n  &:hover,\n  &:focus {\n    ${isActiveStyle};\n  }\n  @media (${mediaQueries.medium}) {\n    display: none;\n  }\n`;\n\nconst StyledSelect = styled.select`\n  border-radius: 0;\n  height: 4rem;\n  width: 100%;\n  background-color: white;\n  margin: 0 auto;\n  display: none;\n\n  @media (${mediaQueries.medium}) {\n    display: block;\n  }\n`;\n\nconst expandMoreStyle = css`\n  margin-top: ${spacing.xsmall};\n  color: ${colors.blue};\n`;\n\nclass SchedulePage extends React.Component {\n  constructor() {\n    super();\n    this.onDayClick = this.onDayClick.bind(this);\n    this.onSelectChange = this.onSelectChange.bind(this);\n    this.state = {\n      activeIndex: 0,\n    };\n  }\n\n  onDayClick(evt, activeIndex) {\n    evt.preventDefault();\n    this.setState({ activeIndex }, () => {\n      window.location.hash = `#${activeIndex}`;\n    });\n  }\n\n  onSelectChange(evt) {\n    this.setState({ activeIndex: evt.target.value });\n  }\n\n  render() {\n    const { location } = this.props;\n    const StyledSafeLink = StyledLink.withComponent(SafeLink);\n    const dayInUrl = viewmodel.schedules.find(\n      scheduleDay => scheduleDay.date === location.hash.substring(1),\n    );\n    const activeDay = dayInUrl || viewmodel.schedules[0];\n\n    if (!activeDay || !activeDay.day) {\n      return <span>Her skjedde noe feil gitt...</span>;\n    }\n    return (\n      <DefaultLayout>\n        <Content>\n          <ContentSection\n            minHeight=\"10vh\"\n            backgroundColor={colors.blueDark}\n            color=\"white\">\n            <ButtonGroup\n              css={buttonGroupStyle}\n              numberOfButtons={viewmodel.schedules.length}>\n              {viewmodel.schedules.map((day, index) => (\n                <StyledLinkContainer>\n                  <StyledSafeLink\n                    key={day.day}\n                    isActive={activeDay.date === day.date}\n                    to={`/schedule#${day.date}`}>\n                    {day.day}\n                  </StyledSafeLink>\n                  {activeDay.date === day.date && (\n                    <ExpandMore css={expandMoreStyle} fontSize=\"large\" />\n                  )}\n                </StyledLinkContainer>\n              ))}\n            </ButtonGroup>\n            <StyledSelect onChange={this.onSelectChange}>\n              {viewmodel.schedules.map((day, index) => (\n                <option\n                  key={day.day}\n                  value={index}\n                  onClick={evt => this.onDayClick(evt, index)}>\n                  {day.day}\n                </option>\n              ))}\n            </StyledSelect>\n          </ContentSection>\n          <ContentSection withTopSeperator withBottomSeperator>\n            {activeDay.collections.map((collection, index) => (\n              <Slot\n                key={`${collection.title}_${index}`}\n                collection={collection}\n              />\n            ))}\n          </ContentSection>\n        </Content>\n      </DefaultLayout>\n    );\n  }\n}\n\nexport default SchedulePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../util/colors';\nimport darken from 'polished/lib/color/darken';\n\nconst hoverStyle = css`\n  background-color: ${darken(0.1, colors.blue)};\n  border: 1px solid ${darken(0.1, colors.blue)};\n  color: white;\n`;\n\nconst strippedStyle = css`\n  transition: background-color none;\n  padding: 0;\n  border-radius: 0;\n  font-size: 1em;\n  color: inherit;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  display: inline-block;\n  box-shadow: none;\n`;\n\nconst appearances = {\n  stripped: css`\n    ${strippedStyle};\n    &:hover,\n    &:focus {\n      ${strippedStyle};\n    }\n  `,\n  outline: css`\n    background-color: white;\n    color: ${colors.blue};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.blue};\n      border-color: ${colors.blue};\n      color: white;\n    }\n  `,\n  active: hoverStyle,\n};\nexport const StyledButton = styled.button`\n  padding: 0.8rem 3rem;\n  background-color: ${colors.blue};\n  border: 1px solid ${colors.blue};\n  color: white;\n  font-size: 1.2rem;\n  font-weight: 100;\n  border-radius: 30px;\n  &:hover,\n  &:focus {\n    ${hoverStyle};\n  }\n  ${p => p.appearance && appearances[p.appearance]};\n}\n`;\n\nconst Button = ({ appearance, children, ...rest }) => (\n  <StyledButton appearance={appearance} {...rest}>\n    {children}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  appearance: PropTypes.string,\n  arrowBottom: PropTypes.bool,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst StyledButtonGroup = styled.div`\n  display: grid;\n  grid-template-columns: ${p =>\n    `repeat(${p.numberOfButtons}, auto [col-start])`};\n  grid-column-gap: 10px;\n`;\n\nconst ButtonGroup = ({ children, ...rest }) => {\n  return <StyledButtonGroup {...rest}>{children}</StyledButtonGroup>;\n};\n\nButtonGroup.propTypes = {\n  css: PropTypes.string,\n  numberOfButtons: PropTypes.number.isRequired,\n};\n\nexport default ButtonGroup;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'ExpandMore');\n\nexports.default = _default;"],"sourceRoot":""}