{"version":3,"sources":["webpack:///./src/util/colors.js","webpack:///./src/util/mediaQueries.js","webpack:///./src/util/spacing.js","webpack:///./src/json/index.js","webpack:///./src/components/Button.jsx","webpack:///./src/components/Content.jsx","webpack:///./src/components/Slot/SlotStyles.js","webpack:///./src/graphql/airtable.js","webpack:///./src/components/Favorites/AddFavorite.jsx","webpack:///./src/components/Speaker/SpeakerModal.jsx","webpack:///./src/components/Speaker/SpeakerFavourites.jsx","webpack:///./src/components/Speaker/Speaker.jsx","webpack:///./src/components/Speaker/index.js","webpack:///./src/components/Slot/SlotSpeakers.jsx","webpack:///./src/components/Slot/index.js","webpack:///./src/components/Slot/Slot.jsx","webpack:///./src/components/Slot/SlotsWithRoom.jsx","webpack:///./src/components/Slot/Slots.jsx","webpack:///./src/layouts/GoogleMaps.jsx","webpack:///./src/layouts/Navigation.jsx","webpack:///./src/layouts/index.js","webpack:///./src/components/Seperator.jsx","webpack:///./src/components/ContentSection.jsx","webpack:///./src/components/SafeLink.jsx","webpack:///./src/util/cookieHelper.js"],"names":["__webpack_require__","d","__webpack_exports__","oldColors","polished_lib_color_darken__WEBPACK_IMPORTED_MODULE_0__","polished_lib_color_darken__WEBPACK_IMPORTED_MODULE_0___default","n","primary","secondary","grey","greyLight","greyLighter","greyLightest","greyDark","background","default","dark","darken","darker","backgroundGray","grayDark","knowit","green","blueDarkest","blueDark","blue","blueLight","blueLighest","yellow","heartRed","xxlarge","xlarge","large","medium","small","xsmall","spacingUnit","normal","season","short","shortCapitalized","long","longCapitalized","eventData","date","startDate","longDate","venue","adress","city","country","year","monthNumber","endDate","cities","viewmodel","title","event","Object","assign","gmapsUrl","meta","description","keywords","days","label","schedules","talks","villages","hoverStyle","css","colors","strippedStyle","name","styles","appearances","stripped","outline","active","StyledButton","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_5__","target","p","appearance","Button","_ref","children","rest","_objectWithoutPropertiesLoose","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","_extends","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__","backgroundColor","globalStyles","spacing","Content","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6__","typeColors","other","talk","keynote","gridTemplates","desktop","mobile","responsiveStyles","type","room","speakers","getViewTypeForDesktop","viewType","getStyledSlotGridWrapperStyle","isMobile","_emotion_css__WEBPACK_IMPORTED_MODULE_1__","StyledSlotGridWrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","mediaQueries","getSlotGridStyle","desktopOrMobile","StyledSlotGrid","rowGap","StyledType","StyledTime","StyledTitle","StyledFavorite","StyledDuration","StyledRoom","StyledRoomLabel","StyledRoomIcon","StyledRoomName","StyledDescription","StyledSpeakers","StyledUserIcon","StyledUserLabel","StyledUserName","fetchSlots","data","_public_static_d_921119627_json__WEBPACK_IMPORTED_MODULE_1__","allAirtable","edges","flatMap","edge","node","StyledFavoriteIcon","styled","FavoriteIcon","_templateObject","StyledFavoriteText","_templateObject2","StyledFavoriteBorder","FavoriteBorder","_templateObject3","AddFavorite","startTime","setFavorites","favorites","uniqueSlotIdentifier","isFavoriteActive","find","fav","core_browser_esm","onClick","updatedCookie","filter","favorite","newFavorites","concat","_toConsumableArray","fontSize","useStyles","makeStyles","theme","modal","display","margin","StyledModal","styled_base_browser_esm","SpeakerModal","_ref2","buttonText","classes","_React$useState","React","useState","open","setOpen","handleClose","css_browser_esm","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","SpeakerModal_ref","Close_default","a","StyledSpeakerFavourites","StyledList","favouriteCategories","SpeakerFavourites","speaker_favourites","splittedFavourites","split","map","favourite","index","length","react_default","Fragment","SpeakerFavourites_ref","key","StyledSpeakerContainer","StyledSpeakerRecreation","StyledImage","StyledIcon","Speaker","_ref$slot","slot","userIds","speaker_bio","speaker_image","speaker_recreation","imageUrl","localFiles","publicURL","src","Person_default","Speaker_SpeakerFavourites","SlotSpeakers","Speaker_SpeakerModal","components_Speaker","Slot","SlotStyles","start","end","duration","Slot_ref","dangerouslySetInnerHTML","__html","Favorites_AddFavorite","time","Slot_SlotSpeakers","Home_default","StyledSlotWithRooms","SlotsWithRoom","groupedByRoom","groupBy","slots","subSlot","sortedRoomsByLength","keys","roomKey","sort","b","Date","SlotsWithRoom_ref","groupSlots","19","StyledSlots","Slots","removeFavorite","noGroupBy","isFavourites","activeDay","_useState","updateFavorites","setCookie","JSON","stringify","useEffect","favoritesCookies","getCookie","document","cookie","currentCookie","parse","components_Slot","groupedByDate","startKey","day","groupedByStart","groups","newSlots","forEach","foundGroupStart","group","foundGroupEnd","newSlot","alreadyPushedIndex","findIndex","Slots_toConsumableArray","slice","push","slotsMappedByRoom","Slot_SlotsWithRoom","defaultProps","StyledGoogleMapsWrapper","StyledGoogleMapsBlocker","StyleGoogleMapsContent","StyledGoogleMaps","GoogleMaps","href","rel","frameBorder","StyledNavigationContainer","StyledNavigation","StyledPushElement","routes","to","StyledSafeLink","SafeLink","Navigation","route","activeStyle","borderBottom","marginBottom","DefaultLayout","showGoogleMaps","Helmet_default","content","layouts_Navigation","layouts_GoogleMaps","StyledSvg","SectionSeparator","position","previousSectionColor","nextSectionColor","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","transform","points","StyledSection","minHeight","color","StyledInnerSection","ContentSection","withTopSeperator","withBottomSeperator","ContentSection_objectWithoutPropertiesLoose","react","ContentSection_extends","Seperator","linkStyle","hoverColor","gatsby_link__WEBPACK_IMPORTED_MODULE_7___default","value","removeCookie","expires","setTime","getTime","toUTCString","encodeURIComponent","cookies","cookieParts","decodeURIComponent","pop","shift","err","console","error"],"mappings":"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","file":"1-2a13e275e52c0450867c.js","sourcesContent":["import darken from 'polished/lib/color/darken';\n\nconst greyLight = '#e8e3e3';\nconst greyLightest = '#f8f8f8';\n\nexport const oldColors = {\n  primary: '#007bba',\n  secondary: '#28334A',\n  grey: '#777777',\n  greyLight: greyLight,\n  greyLighter: '#eff0f2',\n  greyLightest: greyLightest,\n  greyDark: '#4d4d4d',\n\n  background: {\n    default: '#ffffff',\n    dark: darken(0.1, '#ffffff'),\n    darker: darken(0.2, '#ffffff'),\n    backgroundGray: greyLightest,\n    grayDark: '#e4e4e4',\n  },\n  knowit: {\n    green: '#49b0a4',\n  },\n};\n\nexport default {\n  blueDarkest: '#202736',\n  blueDark: '#28334a',\n  blue: '#3177f8',\n  blueLight: '#34c6fc',\n  blueLighest: '#b4eaf4',\n  green: '#339037',\n  grey: '#8b98a4',\n  yellow: '#ffff70',\n  heartRed: '#e95971',\n};\n","export default {\n  xxlarge: 'min-width: 1800px',\n  xlarge: 'min-width: 1200px',\n  large: 'min-width: 800px',\n  medium: 'max-width: 800px',\n  small: 'max-width: 600px',\n  xsmall: 'max-width: 400px',\n};\n","const spacingUnit = 16;\n\nexport default {\n  spacingUnit,\n  xsmall: `${spacingUnit / 4}px`,\n  small: `${spacingUnit / 2}px`,\n  normal: `${spacingUnit}px`,\n  medium: `${spacingUnit * 1.5}px`,\n  large: `${spacingUnit * 2}px`,\n  xlarge: `${spacingUnit * 2.5}px`,\n  xxlarge: `${spacingUnit * 3}px`,\n};\n","export const villages = [];\n\nconst year = '2020';\nconst season = {\n  short: 'vår',\n  shortCapitalized: 'Vår',\n  long: 'våren',\n  longCapitalized: 'Våren',\n};\nconst startDate = '27. mars';\nconst endDate = '28. mars';\n\nexport const eventData = {\n  date: `${startDate} - ${endDate} ${year}`,\n  longDate: `${startDate} - ${endDate} ${year}`,\n  venue: 'Hotel Sundvollen',\n  adress: 'Dronningveien 2, 3531 Krokkleiva',\n  city: 'Krokkleiva',\n  country: 'Norway',\n  year,\n  monthNumber: 3,\n  season,\n  startDate,\n  endDate,\n  cities: [\n    'Berlin',\n    'Istanbul',\n    'Madrid',\n    'Dublin',\n    'Svalbard',\n    'Reykjavik',\n    'Palma',\n    'Ljubljana',\n    'Strømstad',\n    'Praha'\n  ],\n};\n\nconst viewmodel = {\n  title: `Fagseminar ${eventData.season.longCapitalized} ${eventData.year}`,\n  event: {\n    ...eventData,\n    gmapsUrl:\n      'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1991.1272119997684!2d10.308290551804449!3d60.06269275895836!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4641059304c27703%3A0xfa3155c077bf0675!2sSundvolden%20Hotel!5e0!3m2!1sno!2sno!4v1580215375769!5m2!1sno!2sno',\n  },\n  meta: {\n    title: `Knowit Objectnet Fagseminar ${eventData.year}`,\n    description: `Knowit Objectnet arrangerer to fagseminarer årlig. Det er de ansatte selv som lager programmet. ${season.longCapitalized} ${year} vil den bli avholdt ${eventData.date} i ${eventData.city}, ${eventData.country}.`,\n    keywords: `Fagseminar, ${eventData.city}, ${eventData.country}, Fag, Foredrag`,\n  },\n  days: [\n    {\n      date: '27',\n      label: 'Fredag 27.03',\n    },\n    {\n      date: '28',\n      label: 'Lørdag 28.03',\n    },\n  ],\n  schedules: [],\n  talks: {},\n  villages: [],\n};\n\nexport default viewmodel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../util/colors';\nimport darken from 'polished/lib/color/darken';\n\nconst hoverStyle = css`\n  background-color: ${darken(0.1, colors.blue)};\n  border: 1px solid ${darken(0.1, colors.blue)};\n  color: white;\n`;\n\nconst strippedStyle = css`\n  transition: background-color none;\n  padding: 0;\n  border-radius: 0;\n  font-size: 1em;\n  color: inherit;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  display: inline-block;\n  box-shadow: none;\n`;\n\nconst appearances = {\n  stripped: css`\n    ${strippedStyle};\n    &:hover,\n    &:focus {\n      ${strippedStyle};\n    }\n  `,\n  outline: css`\n    background-color: white;\n    color: ${colors.blue};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.blue};\n      border-color: ${colors.blue};\n      color: white;\n    }\n  `,\n  active: hoverStyle,\n};\nexport const StyledButton = styled.button`\n  padding: 0.8rem 3rem;\n  background-color: ${colors.blue};\n  border: 1px solid ${colors.blue};\n  color: white;\n  font-size: 1.2rem;\n  font-weight: 100;\n  font-family: 'Raleway', sans-serif;\n  border-radius: 30px;\n  &:hover,\n  &:focus {\n    ${hoverStyle};\n  }\n  ${p => p.appearance && appearances[p.appearance]};\n}\n`;\n\nconst Button = ({ appearance, children, ...rest }) => (\n  <StyledButton appearance={appearance} {...rest}>\n    {children}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  appearance: PropTypes.string,\n  arrowBottom: PropTypes.bool,\n};\n\nexport default Button;\n","import React, { Fragment } from 'react';\nimport styled from '@emotion/styled';\nimport { Global, css } from '@emotion/core';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\n\nconst StyledContent = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  background-color: ${p => p.backgroundColor || 'white'};\n`;\n\nconst globalStyles = css`\n  html,\n  body {\n    font-size: 16px;\n    color: ${colors.blueDark};\n    word-spacing: ${spacing.spacingUnit / 6}px;\n    line-height: ${spacing.spacingUnit * 1.4}px;\n  }\n\n  body {\n    margin: 0;\n    font-family: 'Raleway', sans-serif;\n  }\n\n  .c-schedule-transition-enter {\n    opacity: 0.01;\n  }\n\n  .c-schedule-transition-enter.c-schedule-transition-enter-active {\n    opacity: 1;\n    transition: opacity 500ms ease-in;\n  }\n\n  .c-schedule-transition-leave {\n    opacity: 1;\n  }\n\n  .c-schedule-transition-leave.c-schedule-transition-leave-active {\n    opacity: 0.01;\n    transition: opacity 300ms ease-in;\n  }\n  a {\n    -webkit-tap-highlight-color: transparent;\n  }\n`;\n\nconst Content = ({ children, ...rest }) => (\n  <Fragment>\n    <Global styles={globalStyles} />\n    <StyledContent {...rest}>{children}</StyledContent>\n  </Fragment>\n);\n\nexport default Content;\n","import styled from '@emotion/styled';\nimport css from '@emotion/css';\nimport colors from '../../util/colors';\nimport mediaQueries from '../../util/mediaQueries';\nimport spacing from '../../util/spacing';\n\nexport const typeColors = {\n  other: colors.blueDark,\n  talk: colors.green,\n  keynote: colors.blue,\n};\n\nconst gridTemplates = {\n  talk: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% 80% 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  keynote: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% 80% 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  other: {\n    desktop: css`\n      grid-template-rows: auto auto auto;\n      grid-template-columns: 10% 80% 10%;\n      align-items: center;\n      grid-template-areas:\n        'time title favorite'\n        'time     title       favorite'\n        'duration description description'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'room        room';\n    `,\n  },\n};\n\nconst responsiveStyles = {\n  type: {\n    desktop: css`\n      border-top-left-radius: 5px;\n      border-bottom-left-radius: 5px;\n    `,\n    mobile: css`\n      border-bottom-left-radius: 0;\n      border-top-right-radius: 5px;\n      border-top-left-radius: 5px;\n    `,\n  },\n  room: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 30px 190px auto;\n      grid-template-areas: 'roomIcon roomLabel roomName';\n    `,\n    mobile: css`\n      grid-template-rows: 30px auto;\n      grid-template-columns: 30px auto;\n      grid-template-areas:\n        'roomIcon roomLabel'\n        'roomIcon roomName';\n    `,\n  },\n  speakers: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 30px 190px auto;\n      grid-template-areas: 'speakerIcon speakerLabel speakerName';\n    `,\n    mobile: css`\n      grid-template-rows: 30px auto;\n      grid-template-columns: 30px auto;\n      grid-template-areas:\n        'speakerIcon speakerLabel'\n        'speakerIcon speakerName';\n    `,\n  },\n};\n\nconst getViewTypeForDesktop = viewType =>\n  viewType === 'row' ? 'desktop' : 'mobile';\n\nconst getStyledSlotGridWrapperStyle = (viewType, isMobile = false) => {\n  if (viewType === 'column' || isMobile) {\n    return css`\n      margin: ${spacing.small} 0;\n      margin-right: ${viewType === 'column' && !isMobile && spacing.normal};\n      grid-template-rows: ${spacing.small} auto;\n      grid-template-columns: 100%;\n      grid-template-areas:\n        'type'\n        'allContent';\n    `;\n  }\n  return css`\n    margin-top: ${spacing.large};\n    grid-template-rows: auto;\n    grid-template-columns: ${spacing.small} auto;\n    grid-template-areas: 'type allContent';\n\n    &:last-child {\n      margin-bottom: ${spacing.large};\n    }\n  `;\n};\nexport const StyledSlotGridWrapper = styled.div`\n  display: grid;\n  background-color: white;\n  border-radius: 5px;\n  ${p => getStyledSlotGridWrapperStyle(p.viewType, false)};\n\n  @media (${mediaQueries.medium}) {\n    ${p => getStyledSlotGridWrapperStyle(p.viewType, true)};\n  }\n`;\n\nconst getSlotGridStyle = (type, viewType, isMobile = false) => {\n  const desktopOrMobile =\n    viewType === 'column' || isMobile ? 'mobile' : 'desktop';\n  if (type) {\n    return gridTemplates[type][desktopOrMobile];\n  }\n  return gridTemplates.other[desktopOrMobile];\n};\n\nexport const StyledSlotGrid = styled.div`\n  display: grid;\n  grid-area: allContent;\n  padding: ${spacing.normal};\n  grid-row-gap: ${p => p.rowGap || spacing.small};\n  ${p => getSlotGridStyle(p.type, p.viewType, false)};\n  & b {\n    font-weight: 900;\n  }\n\n  @media (${mediaQueries.medium}) {\n    ${p => getSlotGridStyle(p.type, p.viewType, true)};\n  }\n`;\n\nexport const StyledType = styled.div`\n  grid-area: type;\n  background-color: ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  border: 1px solid ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  ${p => responsiveStyles.type[getViewTypeForDesktop(p.viewType)]}\n  \n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.type.mobile}\n\n  }\n`;\n\nexport const StyledTime = styled.div`\n  grid-area: time;\n`;\n\nexport const StyledTitle = styled.div`\n  grid-area: title;\n`;\n\nexport const StyledFavorite = styled.div`\n  grid-area: favorite;\n  justify-self: right;\n`;\n\nexport const StyledDuration = styled.div`\n  grid-area: duration;\n`;\n\nexport const StyledRoom = styled.div`\n  grid-area: room;\n  display: grid;\n  ${p => responsiveStyles.room[getViewTypeForDesktop(p.viewType)]}\n\n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.room.mobile}\n  }\n`;\n\nexport const StyledRoomLabel = styled.div`\n  grid-area: roomLabel;\n  display: flex;\n\n  & > svg {\n    padding-right: ${spacing.small};\n    color: ${colors.grey};\n  }\n`;\n\nexport const StyledRoomIcon = styled.div`\n  grid-area: roomIcon;\n`;\nexport const StyledRoomName = styled.b`\n  grid-area: roomName;\n`;\n\nexport const StyledDescription = styled.div`\n  grid-area: description;\n  display: flex;\n  word-break: break-word;\n`;\n\nexport const StyledSpeakers = styled.div`\n  grid-area: speakers;\n  display: grid;\n  grid-auto-rows: min-content;\n  ${p => responsiveStyles.speakers[getViewTypeForDesktop(p.viewType)]}\n\n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.speakers.mobile}\n  }\n`;\n\nexport const StyledUserIcon = styled.div`\n  grid-area: speakerIcon;\n`;\n\nexport const StyledUserLabel = styled.div`\n  grid-area: speakerLabel;\n  display: flex;\n  & > svg {\n    padding-right: ${spacing.small};\n    color: ${colors.grey};\n  }\n`;\n\nexport const StyledUserName = styled.b`\n  grid-area: speakerName;\n  & button {\n    text-align: left;\n  }\n`;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const fetchSlots = () => {\n  const data = useStaticQuery(graphql`\n    query data {\n      allAirtable {\n        edges {\n          node {\n            data {\n              title\n              userIds\n              email\n              description\n              type\n              start\n              end\n              date\n              duration\n              room\n              speaker_bio\n              speaker_favourites\n              speaker_recreation\n              speaker_image {\n                localFiles {\n                  publicURL\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const slots =\n    data && data.allAirtable && data.allAirtable.edges\n      ? data.allAirtable.edges.flatMap(edge => edge.node.data)\n      : [];\n  return slots;\n};\n","import React from 'react';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport colors from '../../util/colors';\nimport Button from '../Button';\nimport styled from '@emotion/styled-base';\n\nconst StyledFavoriteIcon = styled(FavoriteIcon)`\n  color: ${colors.heartRed};\n`;\n\nconst StyledFavoriteText = styled('b')`\n  display: block;\n`;\n\nconst StyledFavoriteBorder = styled(FavoriteBorder)`\n  color: ${colors.grey};\n\n  &:hover,\n  &:focus {\n    color: ${colors.heartRed};\n  }\n`;\n\nconst AddFavorite = ({ title, date, startTime, setFavorites, favorites }) => {\n  const uniqueSlotIdentifier = `${date}_${startTime}_${title}`;\n  const isFavoriteActive = !!favorites.find(\n    fav => fav === uniqueSlotIdentifier,\n  );\n  const changeFavorites = () => {\n    if (isFavoriteActive) {\n      const updatedCookie = favorites.filter(\n        favorite => favorite !== uniqueSlotIdentifier,\n      );\n      setFavorites(updatedCookie);\n    } else {\n      const newFavorites = [...favorites, uniqueSlotIdentifier];\n      setFavorites(newFavorites);\n    }\n  };\n\n  return (\n    <Button appearance=\"stripped\" onClick={changeFavorites}>\n      {isFavoriteActive ? (\n        <StyledFavoriteIcon fontSize=\"large\" />\n      ) : (\n        <StyledFavoriteBorder fontSize=\"large\" />\n      )}\n      <StyledFavoriteText>\n        {isFavoriteActive ? 'Fjern' : 'Lagre'}\n      </StyledFavoriteText>\n    </Button>\n  );\n};\n\nexport default AddFavorite;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '../Button';\nimport css from '@emotion/css';\nimport colors from '../../util/colors';\nimport spacing from '../../util/spacing';\nimport styled from '@emotion/styled';\nimport mediaQueries from '../../util/mediaQueries';\nimport Close from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    margin: '0 auto',\n  },\n}));\n\nconst StyledModal = styled.div`\n  max-width: 60%;\n  width: 50%;\n  overflow-y: auto;\n  background-color: white;\n  padding: ${spacing.normal};\n  max-height: 80vh;\n  height: fit-content;\n  margin: 0 auto;\n  margin-top: ${spacing.xxlarge};\n\n  @media (${mediaQueries.medium}) {\n    max-width: 100%;\n    width: 100%;\n    margin-top: 0;\n    max-height: 100vh;\n  }\n`;\n\nconst SpeakerModal = ({ children, buttonText }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        css={css`\n          color: ${colors.blue};\n          text-decoration: underline;\n\n          &:hover,\n          &:focus {\n            color: ${colors.blueDark};\n          }\n        `}\n        appearance=\"stripped\"\n        onClick={handleOpen}>\n        {buttonText}\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <StyledModal>\n            <Button\n              css={css`\n                float: right;\n              `}\n              onClick={handleClose}\n              appearance=\"stripped\">\n              <Close />\n            </Button>\n            {children}\n          </StyledModal>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SpeakerModal;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport css from '@emotion/css';\nimport spacing from '../../util/spacing';\n\nconst StyledSpeakerFavourites = styled.div`\n  align-self: start;\n  margin: 0;\n  flex: 1;\n  margin-right: ${spacing.normal};\n\n  & > h2 {\n    margin-left: 0;\n  }\n`;\n\nconst StyledList = styled.ul`\n  margin: 0;\n`;\n\nconst favouriteCategories = [\n  'Mat',\n  'Musikksjanger',\n  'Reisemål',\n  'Film/serie',\n  'Sted',\n];\n\nconst SpeakerFavourites = ({ speaker_favourites }) => {\n  if (!speaker_favourites) {\n    return null;\n  }\n  const splittedFavourites = speaker_favourites\n    .split(';')\n    .map((favourite, index) => {\n      if (favourite.length === 0) {\n        return null;\n      }\n      return (\n        <>\n          <strong>{`${favouriteCategories[index]}: `}</strong>\n          <span>{favourite}</span>\n        </>\n      );\n    })\n    .filter(favourite => favourite);\n  return (\n    <StyledSpeakerFavourites>\n      <h2\n        css={css`\n          padding-left: 0;\n        `}>\n        Hva liker du?\n      </h2>\n      <StyledList>\n        {splittedFavourites.map((favourite, index) => (\n          <li key={`favourite_${index}`}>{favourite}</li>\n        ))}\n      </StyledList>\n    </StyledSpeakerFavourites>\n  );\n};\n\nexport default SpeakerFavourites;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Person from '@material-ui/icons/Person';\nimport mediaQueries from '../../util/mediaQueries';\nimport SpeakerFavourites from './SpeakerFavourites';\n\nconst StyledSpeakerContainer = styled.div`\n  display: grid;\n  align-content: start;\n  grid-template-rows: max-content auto auto;\n  grid-template-columns: 30% 35% 35%;\n  align-items: center;\n  grid-template-areas:\n    'image title   title '\n    'image content content';\n\n  @media (${mediaQueries.medium}) {\n    display: grid;\n    grid-template-rows: auto auto auto;\n    grid-template-columns: 100%;\n    align-items: center;\n    grid-template-areas:\n      'image'\n      'title'\n      'content';\n  }\n`;\n\nconst StyledTitle = styled.h2`\n  grid-area: title;\n  align-self: start;\n  margin-top: 0;\n`;\n\nconst StyledDescription = styled.span`\n  align-self: start;\n  flex: 0 0 100%;\n`;\n\nconst StyledSpeakerRecreation = styled.span`\n  align-self: start;\n  flex: 1;\n`;\n\nconst StyledImage = styled.img`\n  grid-area: image;\n  max-width: 75%;\n  align-self: start;\n\n  @media (${mediaQueries.medium}) {\n    max-width: 100%;\n  }\n`;\n\nconst StyledIcon = styled.span`\n  grid-area: image;\n  align-self: start;\n  & > svg {\n    font-size: 15rem;\n  }\n\n  @media (${mediaQueries.medium}) {\n    & > svg {\n      display: none;\n    }\n  }\n`;\n\nconst StyledContent = styled.div`\n  grid-area: content;\n  align-self: start;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst Speaker = ({\n  slot: {\n    userIds,\n    speaker_bio,\n    speaker_image,\n    speaker_favourites,\n    speaker_recreation,\n  },\n}) => {\n  const imageUrl =\n    speaker_image &&\n    speaker_image.localFiles &&\n    speaker_image.localFiles[0] &&\n    speaker_image.localFiles[0].publicURL;\n  return (\n    <StyledSpeakerContainer>\n      {imageUrl ? (\n        <StyledImage src={imageUrl} />\n      ) : (\n        <StyledIcon>\n          <Person fontSize=\"large\" />\n        </StyledIcon>\n      )}\n      <StyledTitle>{userIds}</StyledTitle>\n      <StyledContent>\n        <StyledDescription>\n          {speaker_bio ||\n            'Vi har dessverre ingen beskrivelse på denne personen :('}\n        </StyledDescription>\n        <SpeakerFavourites speaker_favourites={speaker_favourites} />\n        {speaker_recreation && (\n          <StyledSpeakerRecreation>\n            <h2>Hva gjør du på fritida?</h2>\n            <p>{speaker_recreation}</p>\n          </StyledSpeakerRecreation>\n        )}\n      </StyledContent>\n    </StyledSpeakerContainer>\n  );\n};\n\nexport default Speaker;\n","import SpeakerModal from './SpeakerModal';\nimport Speaker from './Speaker';\n\nexport { SpeakerModal };\n\nexport default Speaker;\n","import React from 'react';\nimport Speaker, { SpeakerModal } from '../Speaker';\n\nconst SlotSpeakers = ({ slot }) => (\n  <SpeakerModal buttonText={slot.userIds}>\n    <Speaker slot={slot} />\n  </SpeakerModal>\n);\n\nexport default SlotSpeakers;\n","import Slot from './Slot';\n\nexport default Slot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport Home from '@material-ui/icons/Home';\nimport Person from '@material-ui/icons/Person';\nimport AddFavorite from '../Favorites/AddFavorite';\nimport {\n  StyledSlotGridWrapper,\n  StyledSlotGrid,\n  StyledTitle,\n  StyledType,\n  StyledDescription,\n  StyledSpeakers,\n  StyledFavorite,\n  StyledRoom,\n  StyledDuration,\n  StyledTime,\n  StyledUserName,\n  StyledUserLabel,\n  StyledRoomLabel,\n  StyledRoomName,\n  StyledRoomIcon,\n  StyledUserIcon,\n} from './SlotStyles';\nimport SlotSpeakers from './SlotSpeakers';\n\nconst Slot = ({ slot, date, favorites, setFavorites, viewType }) => {\n  return (\n    <StyledSlotGridWrapper viewType={viewType}>\n      <StyledType type={slot.type} viewType={viewType} />\n      <StyledSlotGrid\n        type={slot.type}\n        viewType={viewType}\n        rowGap={!slot.description && !slot.room && '0'}>\n        <StyledTitle>\n          <b>{slot.title}</b>\n        </StyledTitle>\n        <StyledTime>\n          <b>{`${slot.start} ${slot.end ? '-' : ''} ${slot.end || ''}`}</b>\n        </StyledTime>\n        {slot.duration && (\n          <StyledDuration>\n            {slot.duration ? `${slot.duration} minutter` : 'Ikke oppgitt'}\n          </StyledDuration>\n        )}\n        {slot.description && (\n          <StyledDescription>\n            <div\n              css={css`\n                display: inline-block;\n              `}\n              dangerouslySetInnerHTML={{\n                __html: slot.description,\n              }}\n            />\n          </StyledDescription>\n        )}\n        <StyledFavorite>\n          <AddFavorite\n            title={slot.title}\n            startTime={slot.start || slot.time}\n            setFavorites={setFavorites}\n            favorites={favorites}\n            date={slot.date}\n          />\n        </StyledFavorite>\n        {slot.userIds && (\n          <StyledSpeakers viewType={viewType}>\n            <StyledUserIcon>\n              <Person fontSize=\"small\" />\n            </StyledUserIcon>\n            <StyledUserLabel>Foredragsholdere</StyledUserLabel>\n            <StyledUserName>\n              <SlotSpeakers slot={slot} />\n            </StyledUserName>\n          </StyledSpeakers>\n        )}\n        {slot.room && (\n          <StyledRoom viewType={viewType}>\n            <StyledRoomIcon>\n              <Home fontSize=\"small\" />\n            </StyledRoomIcon>\n            <StyledRoomLabel>Rom:</StyledRoomLabel>\n            <StyledRoomName>{slot.room}</StyledRoomName>\n          </StyledRoom>\n        )}\n      </StyledSlotGrid>\n    </StyledSlotGridWrapper>\n  );\n};\n\nSlot.propTypes = {\n  slot: PropTypes.object,\n  viewType: PropTypes.string,\n};\n\nexport default Slot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport Home from '@material-ui/icons/Home';\nimport Person from '@material-ui/icons/Person';\nimport AddFavorite from '../Favorites/AddFavorite';\nimport {\n  StyledSlotGridWrapper,\n  StyledSlotGrid,\n  StyledTitle,\n  StyledType,\n  StyledDescription,\n  StyledSpeakers,\n  StyledFavorite,\n  StyledRoom,\n  StyledDuration,\n  StyledTime,\n  StyledUserName,\n  StyledUserLabel,\n  StyledRoomLabel,\n  StyledRoomName,\n  StyledRoomIcon,\n  StyledUserIcon,\n} from './SlotStyles';\nimport SlotSpeakers from './SlotSpeakers';\nimport styled from '@emotion/styled';\nimport groupBy from 'lodash/groupBy';\nimport mediaQueries from '../../util/mediaQueries';\n\nconst StyledSlotWithRooms = styled.div`\n  flex: ${p => (p.viewType === 'column' ? '1 28%' : '1')};\n  width: ${p => (p.viewType === 'column' ? 28 : 100)}%;\n\n  @media (${mediaQueries.medium}) {\n    flex: 1 100%;\n    width: 100%;\n  }\n`;\n\nconst SlotsWithRoom = ({ slot, date, favorites, setFavorites, viewType }) => {\n  const groupedByRoom = groupBy(slot.slots, subSlot => subSlot.room);\n  const sortedRoomsByLength = Object.keys(groupedByRoom)\n    .map(roomKey => {\n      const sortedSlots = groupedByRoom[roomKey].sort((a, b) => {\n        return (\n          new Date('1970/01/01 ' + a.start) - new Date('1970/01/01 ' + b.start)\n        );\n      });\n      return { roomKey, slots: sortedSlots };\n    })\n    .sort((a, b) => {\n      if (a.roomKey > b.roomKey) {\n        return 1;\n      }\n      if (a.roomKey < b.roomKey) {\n        return -1;\n      }\n      return 0;\n    });\n\n  return (\n    <>\n      {sortedRoomsByLength.map((room, index) => {\n        return (\n          <StyledSlotWithRooms key={`room_${index}`} viewType={viewType}>\n            <h3>{room.roomKey}</h3>\n            {room.slots.map(subSlot => (\n              <StyledSlotGridWrapper viewType={viewType}>\n                <StyledType type={subSlot.type} viewType={viewType} />\n                <StyledSlotGrid\n                  type={subSlot.type}\n                  viewType={viewType}\n                  rowGap={!subSlot.description && !subSlot.room && '0'}>\n                  <StyledTitle>\n                    <b>{subSlot.title}</b>\n                  </StyledTitle>\n                  <StyledTime>\n                    <b>{`${subSlot.start} ${\n                      subSlot.end ? '-' : ''\n                    } ${subSlot.end || ''}`}</b>\n                  </StyledTime>\n                  {subSlot.duration && (\n                    <StyledDuration>\n                      {subSlot.duration\n                        ? `${subSlot.duration} minutter`\n                        : 'Ikke oppgitt'}\n                    </StyledDuration>\n                  )}\n                  {subSlot.description && (\n                    <StyledDescription>\n                      <div\n                        css={css`\n                          display: inline-block;\n                        `}\n                        dangerouslySetInnerHTML={{\n                          __html: subSlot.description,\n                        }}\n                      />\n                    </StyledDescription>\n                  )}\n                  <StyledFavorite>\n                    <AddFavorite\n                      title={subSlot.title}\n                      startTime={subSlot.start || subSlot.time}\n                      setFavorites={setFavorites}\n                      favorites={favorites}\n                      date={subSlot.date}\n                    />\n                  </StyledFavorite>\n                  {subSlot.userIds && (\n                    <StyledSpeakers viewType={viewType}>\n                      <StyledUserIcon>\n                        <Person fontSize=\"small\" />\n                      </StyledUserIcon>\n                      <StyledUserLabel>Foredragsholdere</StyledUserLabel>\n                      <StyledUserName>\n                        <SlotSpeakers slot={subSlot} />\n                      </StyledUserName>\n                    </StyledSpeakers>\n                  )}\n                  {subSlot.room && (\n                    <StyledRoom viewType={viewType}>\n                      <StyledRoomIcon>\n                        <Home fontSize=\"small\" />\n                      </StyledRoomIcon>\n                      <StyledRoomLabel>Rom:</StyledRoomLabel>\n                      <StyledRoomName>{subSlot.room}</StyledRoomName>\n                    </StyledRoom>\n                  )}\n                </StyledSlotGrid>\n              </StyledSlotGridWrapper>\n            ))}\n          </StyledSlotWithRooms>\n        );\n      })}\n    </>\n  );\n};\n\nSlotsWithRoom.propTypes = {\n  slot: PropTypes.object,\n  viewType: PropTypes.string,\n};\n\nexport default SlotsWithRoom;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport groupBy from 'lodash/groupBy';\nimport styled from '@emotion/styled';\nimport Slot from '.';\nimport { getCookie, setCookie } from '../../util/cookieHelper';\nimport viewmodel from '../../json';\nimport css from '@emotion/css';\nimport mediaQueries from '../../util/mediaQueries';\nimport SlotsWithRoom from './SlotsWithRoom';\n\nconst groupSlots = {\n  19: [\n    { start: '13:00', end: '13:30' },\n    { start: '13:45', end: '14:15' },\n    { start: '14:30', end: '15:00' },\n    { start: '15:15', end: '15:45' },\n  ],\n};\n\nconst slotsMappedByRoom = (activeDay, slots) => {\n  const groups = groupSlots[activeDay.date];\n  if (!groups) {\n    return slots;\n  }\n  let newSlots = [];\n  slots.forEach(slot => {\n    const foundGroupStart = groups.find(group => group.start === slot.start);\n    const foundGroupEnd = groups.find(group => group.end === slot.end);\n    if (slot.type !== 'other' && (foundGroupStart || foundGroupEnd)) {\n      const start = foundGroupStart\n        ? foundGroupStart.start\n        : foundGroupEnd.start;\n      const end = foundGroupEnd ? foundGroupEnd.end : foundGroupStart.end;\n      const alreadyPushed = newSlots.find(newSlot => newSlot.start === start);\n\n      if (alreadyPushed) {\n        const alreadyPushedIndex = newSlots.findIndex(\n          newSlot => newSlot.start === start,\n        );\n        newSlots = [\n          ...newSlots.slice(0, alreadyPushedIndex),\n          {\n            ...newSlots[alreadyPushedIndex],\n            slots: [...newSlots[alreadyPushedIndex].slots, slot],\n          },\n          ...newSlots.slice(alreadyPushedIndex + 1),\n        ];\n      } else {\n        newSlots.push({\n          start,\n          end,\n          date: slot.date,\n          slots: [slot],\n        });\n      }\n    } else {\n      newSlots.push(slot);\n    }\n  });\n  return newSlots;\n};\n\nconst getColumnStyle = viewType => {\n  if (viewType === 'column') {\n    return css`\n      align-items: baseline;\n      flex-wrap: wrap;\n\n      & > * {\n        flex: 1 28%;\n        width: 28%;\n      }\n\n      @media (${mediaQueries.medium}) {\n        flex-direction: column;\n        & > * {\n          flex: 1 100%;\n          width: 100%;\n        }\n      }\n    `;\n  }\n  return '';\n};\n\nconst StyledSlots = styled.div`\n  display: flex;\n  flex-direction: ${p => (p.viewType === 'row' ? 'column' : 'row')};\n  ${p => getColumnStyle(p.viewType)};\n`;\n\nconst Slots = ({\n  slots,\n  removeFavorite,\n  noGroupBy,\n  viewType,\n  isFavourites,\n  activeDay,\n}) => {\n  const [favorites, setFavorites] = useState([]);\n\n  const updateFavorites = newFavorites => {\n    setCookie('favorites', JSON.stringify(newFavorites));\n    setFavorites(newFavorites);\n    removeFavorite && removeFavorite(newFavorites);\n  };\n\n  useEffect(() => {\n    const favoritesCookies = getCookie('favorites', document.cookie);\n    const currentCookie = favoritesCookies ? JSON.parse(favoritesCookies) : [];\n    setFavorites(currentCookie);\n  }, []);\n\n  if (noGroupBy) {\n    return (\n      <StyledSlots viewType={viewType}>\n        {slots.map(slot => (\n          <Slot\n            key={`${slot.title}_${slot.room}`}\n            slot={slot}\n            setFavorites={updateFavorites}\n            favorites={favorites}\n            viewType={viewType}\n          />\n        ))}\n      </StyledSlots>\n    );\n  }\n\n  if (isFavourites) {\n    const groupedByDate = groupBy(slots, slot => slot.date);\n    return Object.keys(groupedByDate)\n      .sort()\n      .map(startKey => (\n        <div key={startKey}>\n          <h3>{viewmodel.days.find(day => day.date === startKey).label}</h3>\n          <StyledSlots viewType={viewType}>\n            {groupedByDate[startKey]\n              .sort((a, b) => (a.start > b.start ? 1 : -1))\n              .map(slot => (\n                <Slot\n                  key={`${slot.title}_${slot.room}`}\n                  slot={slot}\n                  setFavorites={updateFavorites}\n                  favorites={favorites}\n                  viewType={viewType}\n                />\n              ))}\n          </StyledSlots>\n        </div>\n      ));\n  }\n\n  const groupedByStart = groupBy(\n    slotsMappedByRoom(activeDay, slots),\n    slot => slot.start,\n  );\n  return Object.keys(groupedByStart)\n    .sort()\n    .map(startKey => (\n      <div key={startKey}>\n        <h2>{startKey}</h2>\n        <StyledSlots viewType={viewType}>\n          {groupedByStart[startKey].map((slot, index) =>\n            slot.slots ? (\n              <SlotsWithRoom\n                key={`${index}`}\n                slot={slot}\n                setFavorites={updateFavorites}\n                favorites={favorites}\n                viewType={viewType}\n              />\n            ) : (\n              <Slot\n                key={`${slot.title}_${slot.room}`}\n                slot={slot}\n                setFavorites={updateFavorites}\n                favorites={favorites}\n                viewType={viewType}\n              />\n            ),\n          )}\n        </StyledSlots>\n      </div>\n    ));\n};\n\nSlots.propTypes = {\n  slots: PropTypes.arrayOf(PropTypes.object),\n  removeFavorite: PropTypes.func,\n  noGroupBy: PropTypes.bool,\n  isFavourites: PropTypes.bool,\n  viewType: PropTypes.string,\n};\n\nSlots.defaultProps = {\n  noGroupBy: false,\n  viewType: 'row',\n};\n\nexport default Slots;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport viewmodel from '../json';\nimport { oldColors as colors } from '../util/colors';\nimport mediaQueries from '../util/mediaQueries';\n\nconst StyledGoogleMapsWrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst StyledGoogleMapsBlocker = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`;\n\nconst StyleGoogleMapsContent = styled.div`\n  width: 350px;\n  height: 200px;\n  padding: 20px;\n  top: 0.5rem;\n  left: 0.5rem;\n  position: absolute;\n  text-align: left;\n  background: white;\n  border: 1px solid ${colors.grey};\n\n  @media (${mediaQueries.medium}) {\n    width: 60%;\n    height: 240px;\n  }\n`;\n\nconst StyledGoogleMaps = styled.iframe`\n  height: 100vh;\n  width: 100%;\n  border: none;\n`;\n\nconst GoogleMaps = () => {\n  return (\n    <StyledGoogleMapsWrapper>\n      <StyledGoogleMapsBlocker />\n      <StyleGoogleMapsContent>\n        <h1>Lokasjon</h1>\n        <a\n          href=\"https://www.sundvolden.no/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <h3>{viewmodel.event.venue}</h3>\n        </a>\n        <a\n          href=\"https://g.page/Sundvolden?share\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <h3>{viewmodel.event.adress}</h3>\n        </a>\n        <h3>{viewmodel.event.city}</h3>\n      </StyleGoogleMapsContent>\n      <StyledGoogleMaps src={viewmodel.event.gmapsUrl} frameBorder=\"0\" />\n    </StyledGoogleMapsWrapper>\n  );\n};\n\nexport default GoogleMaps;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport SafeLink from '../components/SafeLink';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\n\nconst StyledNavigationContainer = styled.div`\n  width: 100%;\n  text-align: center;\n  position: fixed;\n  z-index: 3;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  border-bottom: 3px solid ${colors.blueDarkest};\n  background-color: ${colors.blueDark};\n`;\n\nconst StyledNavigation = styled.div`\n  color: white;\n  justify-content: center;\n  display: grid;\n  grid-column-gap: ${spacing.normal};\n  grid-template-columns: repeat(3, ${spacing.spacingUnit * 6}px [col-start]);\n`;\n\nconst StyledPushElement = styled.div`\n  height: ${spacing.small};\n  padding: ${spacing.small} 0;\n`;\n\nconst routes = [\n  { to: '/', title: 'Sundvollen 2020' },\n  { to: '/schedule', title: 'Program' },\n  { to: '/favorites', title: 'Favoritter' },\n];\n\nconst StyledSafeLink = styled(SafeLink)`\n  justify-self: center;\n  padding: ${spacing.small} 0;\n`;\n\nconst Navigation = () => {\n  return (\n    <>\n      <StyledNavigationContainer>\n        <StyledNavigation>\n          {routes.map(route => (\n            <StyledSafeLink\n              key={route.to}\n              to={route.to}\n              activeStyle={{\n                borderBottom: `3px solid ${colors.blue}`,\n                marginBottom: '-3px',\n              }}>\n              {route.title}\n            </StyledSafeLink>\n          ))}\n        </StyledNavigation>\n      </StyledNavigationContainer>\n      <StyledPushElement />\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport viewmodel from '../json';\nimport GoogleMaps from './GoogleMaps';\nimport Navigation from './Navigation';\n\nconst DefaultLayout = ({ children, showGoogleMaps }) => {\n  return (\n    <div>\n      <Helmet\n        title={viewmodel.meta.title}\n        meta={[\n          {\n            name: 'description',\n            content: viewmodel.meta.description,\n          },\n          { name: 'keywords', content: viewmodel.meta.description },\n        ]}>\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Raleway&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n      <Navigation />\n      {children}\n      {showGoogleMaps && <GoogleMaps />}\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst StyledSvg = styled.svg`\n  display: block;\n  margin-bottom: -1px;\n  margin-top: -1px;\n`;\n\nconst SectionSeparator = ({\n  position,\n  previousSectionColor,\n  nextSectionColor,\n  ...rest\n}) => {\n  if (position === 'bottom') {\n    return (\n      <StyledSvg\n        {...rest}\n        viewBox=\"0 0 1024 76\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(0.000000, -1005.000000)\">\n            <g transform=\"translate(512.000000, 1043.000000) rotate(-180.000000) translate(-512.000000, -1043.000000) translate(0.000000, 1005.000000)\">\n              <polygon\n                fill=\"#33C6FC\"\n                transform=\"translate(512.000000, 41.000000) scale(1, -1) translate(-512.000000, -41.000000) \"\n                points=\"-1.13686838e-13 6 -1.25055521e-12 76 1024 76 1024 59\"\n              />\n              <polygon\n                fill=\"#3277F8\"\n                points=\"-1.13686838e-13 2 0 50 1024 49.5 1024 2\"\n              />\n              <polygon\n                fill=\"#28334A\"\n                points=\"0 0 1.02318154e-12 14.3333333 1024 59.5 1024 0\"\n              />\n            </g>\n          </g>\n        </g>\n      </StyledSvg>\n    );\n  }\n  return (\n    <StyledSvg\n      {...rest}\n      viewBox=\"0 0 1024 84\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(0.000000, -465.000000)\">\n          <g transform=\"translate(0.000000, 465.000000)\">\n            <polygon\n              fill=\"#33C6FC\"\n              transform=\"translate(512.000000, 44.416667) scale(1, -1) translate(-512.000000, -44.416667) \"\n              points=\"-2.40172465e-15 5.33333333 0 83.5 1024 83.5 1024 65.8333333\"\n            />\n            <polygon fill=\"#3277F8\" points=\"0 2 0 49.5 1024 49.5 1024 2\" />\n            <polygon\n              fill={previousSectionColor || '#28334A'}\n              points=\"0 0 0 5.33333333 1024 59.5 1024 0\"\n            />\n          </g>\n        </g>\n      </g>\n    </StyledSvg>\n  );\n};\n\nSectionSeparator.propTypes = {\n  position: PropTypes.string,\n  previousSectionColor: PropTypes.string,\n  nextSectionColor: PropTypes.string,\n};\n\nSectionSeparator.defaultProps = {\n  position: 'top',\n};\n\nexport default SectionSeparator;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Seperator from './Seperator';\nimport styled from '@emotion/styled';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\nimport mediaQueries from '../util/mediaQueries';\n\nconst StyledSection = styled.div`\n  background-color: ${p => p.backgroundColor || colors.blueLighest};\n  min-height: ${p => p.minHeight || '50vh'};\n  color: ${p => p.color || colors.blueDark};\n`;\nconst StyledInnerSection = styled.div`\n  padding: 1rem 15%;\n  min-height: ${p => p.minHeight || '50vh'};\n  @media (${mediaQueries.xxlarge}) {\n    padding: 0 20%;\n  }\n\n  @media (${mediaQueries.medium}) {\n    padding: 0 ${spacing.large};\n  }\n`;\n\nconst ContentSection = ({\n  withTopSeperator,\n  withBottomSeperator,\n  previousSectionColor,\n  nextSectionColor,\n  minHeight,\n  children,\n  ...rest\n}) => {\n  return (\n    <Fragment>\n      <StyledSection minHeight={minHeight} {...rest}>\n        {withTopSeperator && (\n          <Seperator\n            previousSectionColor={previousSectionColor}\n            nextSectionColor={nextSectionColor}\n            position=\"top\"\n          />\n        )}\n        <StyledInnerSection minHeight={minHeight}>\n          {children}\n        </StyledInnerSection>\n        {withBottomSeperator && (\n          <Seperator\n            previousSectionColor={previousSectionColor}\n            nextSectionColor={nextSectionColor}\n            position=\"bottom\"\n          />\n        )}\n      </StyledSection>\n    </Fragment>\n  );\n};\n\nContentSection.defaultProps = {\n  withTopSeperator: false,\n  withBottomSeperator: false,\n};\n\nContentSection.propTypes = {\n  withBottomSeperator: PropTypes.bool,\n  withTopSeperator: PropTypes.bool,\n  previousSectionColor: PropTypes.string,\n  nextSectionColor: PropTypes.string,\n  minHeight: PropTypes.string,\n};\n\nexport default ContentSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\nimport { css } from '@emotion/core';\nimport { oldColors } from '../util/colors';\n\nconst linkStyle = (hoverColor = oldColors.primary) => css`\n  background-color: transparent;\n  text-decoration: none;\n  color: white;\n\n  &:hover,\n  &:focus {\n    color: white;\n  }\n`;\n\nconst SafeLink = ({ to, children, hoverColor, ...rest }) => {\n  if (to) {\n    return (\n      <Link to={to} css={linkStyle(hoverColor)} {...rest}>\n        {children}\n      </Link>\n    );\n  }\n  return (\n    <a css={linkStyle} {...rest}>\n      {children}\n    </a>\n  );\n};\n\nSafeLink.propTypes = {\n  to: PropTypes.string,\n  hoverColor: PropTypes.string,\n};\n\nexport default SafeLink;\n","export const setCookie = (name, value, removeCookie) => {\n  let expires;\n  if (removeCookie) {\n    expires = 'Thu, 01 Jan 1970 00:00:01 GMT';\n  } else {\n    const d = new Date();\n    d.setTime(d.getTime() + 9999 * 24 * 60 * 60 * 1000);\n    expires = `expires=${d.toUTCString()}`;\n  }\n  document.cookie = `${name}=${encodeURIComponent(value)}; ${expires}; path=/`;\n};\n\nexport const getCookie = (name, cookies) => {\n  try {\n    const value = `; ${cookies}`;\n    const cookieParts = value.split(`; ${name}=`);\n    if (cookieParts.length > 1) {\n      return decodeURIComponent(\n        cookieParts\n          .pop()\n          .split(';')\n          .shift(),\n      );\n    }\n    return null;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nexport const isValidCookie = (name, cookies) =>\n  getCookie(name, cookies) !== null;\n\nexport const deleteCookie = name => {\n  setCookie(name, '', true);\n};\n"],"sourceRoot":""}