{"version":3,"sources":["webpack:///./src/pages/favorites.js"],"names":["FavoritesPage","_useState","useState","favorites","setFavorites","useEffect","favoriteCookies","getCookie","document","cookie","JSON","parse","allCollections","viewmodel","schedules","filter","_ref","uniqueSlotIdentifier","date","start","time","title","find","favorite","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_layouts__WEBPACK_IMPORTED_MODULE_5__","_components_Content__WEBPACK_IMPORTED_MODULE_4__","_components_ContentSection__WEBPACK_IMPORTED_MODULE_6__","withTopSeperator","withBottomSeperator","_components_Slot_Slots__WEBPACK_IMPORTED_MODULE_8__","slots","removeFavorite"],"mappings":"+KAiCeA,UAzBO,WAAM,IAAAC,EACQC,mBAAS,IAApCC,EADmBF,EAAA,GACRG,EADQH,EAAA,GAK1BI,oBAAU,WACR,IAAMC,EAAkBC,YAAU,YAAaC,SAASC,QACxDL,EAAaE,EAAkBI,KAAKC,MAAML,GAAmB,KAC5D,IAEH,IAAMM,EAAiBC,IAAUC,UAAUC,OACzC,SAAAC,GAAA,IATeC,EASZC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,MAAOC,EAAhBJ,EAAgBI,KAAMC,EAAtBL,EAAsBK,MAAtB,OATeJ,EAUDC,EAAJ,KAAYC,GAASC,GAArB,IAA6BC,IATrClB,EAAUmB,KAAK,SAAAC,GAAQ,OAAIA,IAAaN,MAW5C,OACEO,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,KACEH,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CAAgBC,kBAAgB,EAACC,qBAAmB,GAClDN,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,CAAOC,MAAOpB,EAAgBqB,eAAgB7B","file":"component---src-pages-favorites-js-81b30cf417399ec8012c.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport viewmodel from '../json';\nimport Content from '../components/Content';\nimport DefaultLayout from '../layouts';\nimport ContentSection from '../components/ContentSection';\nimport { getCookie } from '../util/cookieHelper';\nimport Slots from '../components/Slot/Slots';\n\nconst FavoritesPage = () => {\n  const [favorites, setFavorites] = useState([]);\n  const isActive = uniqueSlotIdentifier =>\n    !!favorites.find(favorite => favorite === uniqueSlotIdentifier);\n\n  useEffect(() => {\n    const favoriteCookies = getCookie('favorites', document.cookie);\n    setFavorites(favoriteCookies ? JSON.parse(favoriteCookies) : []);\n  }, []);\n\n  const allCollections = viewmodel.schedules.filter(\n    ({ date, start, time, title }) =>\n      isActive(`${date}_${start || time}_${title}`),\n  );\n  return (\n    <DefaultLayout>\n      <Content>\n        <ContentSection withTopSeperator withBottomSeperator>\n          <Slots slots={allCollections} removeFavorite={setFavorites} />\n        </ContentSection>\n      </Content>\n    </DefaultLayout>\n  );\n};\n\nexport default FavoritesPage;\n"],"sourceRoot":""}